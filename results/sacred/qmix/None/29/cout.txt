[INFO 14:07:16] pymarl Running command 'my_main'
[INFO 14:07:16] pymarl Started run with ID "29"
[DEBUG 14:07:16] pymarl Starting Heartbeat
[DEBUG 14:07:16] my_main Started
[WARNING 14:07:16] my_main CUDA flag use_cuda was switched OFF automatically because no CUDA devices are available!
[INFO 14:07:16] my_main Experiment Parameters:
[INFO 14:07:16] my_main 

{   'action_selector': 'epsilon_greedy',
    'add_value_last_step': True,
    'agent': 'rnn',
    'agent_output_type': 'q',
    'batch_size': 32,
    'batch_size_run': 1,
    'buffer_cpu_only': True,
    'buffer_size': 5000,
    'checkpoint_path': '',
    'double_q': True,
    'env': 'gymma',
    'env_args': {   'key': None,
                    'pretrained_wrapper': None,
                    'seed': 448089844,
                    'time_limit': 50},
    'epsilon_anneal_time': 50000,
    'epsilon_finish': 0.05,
    'epsilon_start': 1.0,
    'evaluate': False,
    'evaluation_epsilon': 0.0,
    'gamma': 0.99,
    'grad_norm_clip': 10,
    'hidden_dim': 64,
    'hypergroup': None,
    'hypernet_embed': 64,
    'hypernet_layers': 2,
    'label': 'default_label',
    'learner': 'q_learner',
    'learner_log_interval': 100,
    'load_step': 0,
    'local_results_path': 'results',
    'log_interval': 100,
    'lr': 0.0005,
    'mac': 'basic_mac',
    'mixer': 'qmix',
    'mixing_embed_dim': 32,
    'name': 'qmix',
    'obs_agent_id': True,
    'obs_individual_obs': False,
    'obs_last_action': False,
    'optim_alpha': 0.99,
    'optim_eps': 1e-05,
    'render': False,
    'repeat_id': 1,
    'runner': 'episode',
    'runner_log_interval': 100,
    'save_model': True,
    'save_model_interval': 500,
    'save_replay': False,
    'seed': 448089844,
    'standardise_returns': False,
    'standardise_rewards': True,
    't_max': 1000,
    'target_update_interval_or_tau': 200,
    'test_greedy': True,
    'test_interval': 100,
    'test_nepisode': 5,
    'use_cuda': False,
    'use_rnn': False,
    'use_tensorboard': False}

[INFO 14:07:17] my_main Beginning training for 1000 timesteps
prev_heuristic: 0
action: pick-up(robot4:player,cpr_board1:item,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 5
reward after normalising 2.5
reward:  2.5
prev_heuristic: 5
action: move(robot1:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: unstack(robot2:player,pump1:item,aed1:item,hospital_cart_right1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 5
reward after normalising 2.5
reward:  2.5
prev_heuristic: 10
action: move(robot2:player,hospital_cart_right1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,patient_legs1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,table1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot2:player,patient_legs1:station,hospital_cart_right1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,patient_bed_station1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot2:player,hospital_cart_right1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: place(robot4:player,cpr_board1:item,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising -5
reward after normalising -0.5555555555555556
reward:  -0.5555555555555556
prev_heuristic: 5
action: pick-up(robot1:player,cpr_board1:item,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 5
reward after normalising 0.5555555555555556
reward:  0.5555555555555556
prev_heuristic: 10
action: move(robot3:player,patient_legs1:station,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: stack(robot2:player,pump1:item,syringe1:item,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'stacked': True}, 'syringe1': {'stacked': True}}
curr_heuristic: 5
reward before normalising -5
reward after normalising -0.5
reward:  -0.5
prev_heuristic: 5
action: move(robot3:player,table1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'stacked': True}, 'syringe1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,patient_legs1:station,hospital_cart_right1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'stacked': True}, 'syringe1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'stacked': True}, 'syringe1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,patient_legs1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'stacked': True}, 'syringe1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot4:player,hospital_cart1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'stacked': True}, 'syringe1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,hospital_cart1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'stacked': True}, 'syringe1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,hospital_cart_right1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'stacked': True}, 'syringe1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,hospital_cart1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'stacked': True}, 'syringe1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,patient_legs1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'stacked': True}, 'syringe1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,patient_legs1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'stacked': True}, 'syringe1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,patient_legs1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'stacked': True}, 'syringe1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,hospital_cart1:station,hospital_cart_right1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'stacked': True}, 'syringe1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot4:player,hospital_cart_left1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'stacked': True}, 'syringe1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,hospital_cart_right1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'stacked': True}, 'syringe1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot4:player,patient_bed_station1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'stacked': True}, 'syringe1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: unstack(robot3:player,pump1:item,syringe1:item,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'stacked': True}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 5
reward after normalising 0.25
reward:  0.25
prev_heuristic: 10
action: stack(robot1:player,cpr_board1:item,patient1:item,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'syringe1': {'stacked': True}, 'patient1': {'stacked': True}}
curr_heuristic: 5
reward before normalising -5
reward after normalising -0.23809523809523808
reward:  -0.23809523809523808
prev_heuristic: 5
action: move(robot2:player,patient_bed_station1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'syringe1': {'stacked': True}, 'patient1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,hospital_cart_left1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'syringe1': {'stacked': True}, 'patient1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: place(robot3:player,pump1:item,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'syringe1': {'stacked': True}, 'patient1': {'stacked': True}}
curr_heuristic: 0
reward before normalising -5
reward after normalising -0.22727272727272727
reward:  -0.22727272727272727
prev_heuristic: 0
action: move(robot2:player,patient_legs1:station,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'syringe1': {'stacked': True}, 'patient1': {'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot2:player,table1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'syringe1': {'stacked': True}, 'patient1': {'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot4:player,hospital_cart_left1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'syringe1': {'stacked': True}, 'patient1': {'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot1:player,patient_bed_station1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'syringe1': {'stacked': True}, 'patient1': {'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot3:player,hospital_cart1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'syringe1': {'stacked': True}, 'patient1': {'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot3:player,patient_bed_station1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'syringe1': {'stacked': True}, 'patient1': {'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: pick-up(robot4:player,pump1:item,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False}, 'syringe1': {'stacked': True}, 'patient1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 5
reward after normalising 0.17857142857142858
reward:  0.17857142857142858
prev_heuristic: 5
action: move(robot1:player,patient_legs1:station,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False}, 'syringe1': {'stacked': True}, 'patient1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,patient_legs1:station,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False}, 'syringe1': {'stacked': True}, 'patient1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot4:player,hospital_cart1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False}, 'syringe1': {'stacked': True}, 'patient1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,table1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False}, 'syringe1': {'stacked': True}, 'patient1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,patient_legs1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False}, 'syringe1': {'stacked': True}, 'patient1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot4:player,patient_legs1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False}, 'syringe1': {'stacked': True}, 'patient1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,table1:station,hospital_cart_right1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False}, 'syringe1': {'stacked': True}, 'patient1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: pick-up(robot3:player,syringe1:item,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 5
reward after normalising 0.16129032258064516
reward:  0.16129032258064516
prev_heuristic: 10
action: move(robot1:player,hospital_cart_right1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: place(robot3:player,syringe1:item,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}}
curr_heuristic: 5
reward before normalising -5
reward after normalising -0.15625
reward:  -0.15625
prev_heuristic: 5
action: move(robot1:player,patient_bed_station1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot4:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,hospital_cart_left1:station,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,table1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,hospital_cart_left1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,patient_bed_station1:station,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot4:player,patient_legs1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,patient_legs1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,table1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot4:player,hospital_cart1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,hospital_cart1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,patient_legs1:station,hospital_cart_right1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,hospital_cart_left1:station,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,hospital_cart1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,hospital_cart_right1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: unstack(robot2:player,cpr_board1:item,patient1:item,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 5
reward after normalising 0.125
reward:  0.125
prev_heuristic: 10
action: stack(robot2:player,cpr_board1:item,patient1:item,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}}
curr_heuristic: 5
reward before normalising -5
reward after normalising -0.12195121951219512
reward:  -0.12195121951219512
prev_heuristic: 5
action: move(robot3:player,patient_bed_station1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot4:player,patient_bed_station1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,table1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot4:player,patient_legs1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,patient_bed_station1:station,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,patient_bed_station1:station,hospital_cart_right1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot4:player,hospital_cart1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,table1:station,hospital_cart_right1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,hospital_cart1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,hospital_cart_right1:station,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,hospital_cart_right1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,patient_legs1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,hospital_cart1:station,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,hospital_cart1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,hospital_cart_left1:station,hospital_cart_right1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,table1:station,hospital_cart_right1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: pick-up(robot3:player,aed1:item,hospital_cart_right1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}, 'aed1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 5
reward after normalising 0.10416666666666667
reward:  0.10416666666666667
prev_heuristic: 10
action: move(robot1:player,hospital_cart_right1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}, 'aed1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot2:player,table1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}, 'aed1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,hospital_cart_right1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}, 'aed1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot4:player,patient_bed_station1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}, 'aed1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,hospital_cart1:station,hospital_cart_right1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}, 'aed1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot4:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}, 'aed1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: place(robot3:player,aed1:item,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}, 'aed1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising -5
reward after normalising -0.09259259259259259
reward:  -0.09259259259259259
prev_heuristic: 5
action: move(robot4:player,patient_legs1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}, 'aed1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,patient_bed_station1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}, 'aed1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,hospital_cart1:station,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}, 'aed1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,table1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}, 'aed1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: stack(robot4:player,pump1:item,cpr_board1:item,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}, 'aed1': {'picked-up': False}}
curr_heuristic: 0
reward before normalising -5
reward after normalising -0.08620689655172414
reward:  -0.08620689655172414
prev_heuristic: 0
action: move(robot2:player,hospital_cart1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}, 'aed1': {'picked-up': False}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot3:player,patient_bed_station1:station,hospital_cart_right1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}, 'aed1': {'picked-up': False}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot4:player,patient_bed_station1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}, 'aed1': {'picked-up': False}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot1:player,hospital_cart_right1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}, 'aed1': {'picked-up': False}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: pick-up(robot1:player,aed1:item,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}, 'aed1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 5
reward after normalising 0.08196721311475409
reward:  0.08196721311475409
prev_heuristic: 5
action: move(robot2:player,patient_legs1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}, 'aed1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot4:player,patient_legs1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}, 'aed1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: pick-up(robot2:player,syringe1:item,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}, 'aed1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 5
reward after normalising 0.07936507936507936
reward:  0.07936507936507936
prev_heuristic: 10
action: place(robot1:player,aed1:item,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}, 'aed1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising -5
reward after normalising -0.078125
reward:  -0.078125
prev_heuristic: 5
action: move(robot4:player,hospital_cart1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}, 'aed1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,hospital_cart1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}, 'aed1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,hospital_cart_left1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}, 'aed1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,hospital_cart_right1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}, 'aed1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,hospital_cart1:station,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}, 'aed1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,table1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}, 'aed1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,hospital_cart_left1:station,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}, 'aed1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,hospital_cart_left1:station,hospital_cart_right1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}, 'aed1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,hospital_cart1:station,hospital_cart_right1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}, 'aed1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,hospital_cart_right1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}, 'aed1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,table1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}, 'aed1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,hospital_cart_right1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}, 'aed1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,hospital_cart_left1:station,hospital_cart_right1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}, 'aed1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,patient_bed_station1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}, 'aed1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot4:player,patient_legs1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}, 'aed1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,hospital_cart_right1:station,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}, 'aed1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot4:player,patient_bed_station1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}, 'aed1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,table1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}, 'aed1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,patient_legs1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}, 'aed1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,patient_legs1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}, 'aed1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: unstack(robot1:player,pump1:item,cpr_board1:item,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}, 'aed1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 5
reward after normalising 0.06329113924050633
reward:  0.06329113924050633
prev_heuristic: 10
action: move(robot4:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}, 'aed1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,patient_bed_station1:station,hospital_cart_right1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}, 'aed1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,hospital_cart_right1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}, 'aed1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot4:player,patient_legs1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}, 'aed1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,patient_legs1:station,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}, 'aed1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot4:player,patient_bed_station1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}, 'aed1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: place(robot1:player,pump1:item,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}, 'aed1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising -5
reward after normalising -0.058823529411764705
reward:  -0.058823529411764705
prev_heuristic: 5
action: move(robot1:player,table1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}, 'aed1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,hospital_cart1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}, 'aed1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,hospital_cart_left1:station,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}, 'aed1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: unstack(robot1:player,cpr_board1:item,patient1:item,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}, 'aed1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 5
reward after normalising 0.05747126436781609
reward:  0.05747126436781609
prev_heuristic: 10
action: move(robot2:player,patient_legs1:station,hospital_cart_right1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}, 'aed1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot4:player,patient_legs1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}, 'aed1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,patient_bed_station1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}, 'aed1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot2:player,hospital_cart_right1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}, 'aed1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: pick-up(robot3:player,pump1:item,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}, 'aed1': {'picked-up': False}}
curr_heuristic: 15
reward before normalising 5
reward after normalising 0.056179775280898875
reward:  0.056179775280898875
prev_heuristic: 15
action: move(robot4:player,patient_bed_station1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}, 'aed1': {'picked-up': False}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: move(robot1:player,patient_legs1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}, 'aed1': {'picked-up': False}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: move(robot3:player,table1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}, 'aed1': {'picked-up': False}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: move(robot1:player,hospital_cart1:station,hospital_cart_right1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}, 'aed1': {'picked-up': False}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: move(robot2:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}, 'aed1': {'picked-up': False}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: move(robot3:player,patient_bed_station1:station,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}, 'aed1': {'picked-up': False}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: place(robot3:player,pump1:item,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}, 'aed1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising -5
reward after normalising -0.05434782608695652
reward:  -0.05434782608695652
prev_heuristic: 10
action: move(robot2:player,patient_legs1:station,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}, 'aed1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,table1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}, 'aed1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,hospital_cart_right1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}, 'aed1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot2:player,table1:station,hospital_cart_right1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}, 'aed1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot4:player,hospital_cart1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}, 'aed1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot2:player,hospital_cart_right1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}, 'aed1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,patient_bed_station1:station,hospital_cart_right1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}, 'aed1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot2:player,hospital_cart1:station,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}, 'aed1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,hospital_cart_right1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}, 'aed1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot2:player,table1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}, 'aed1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot4:player,patient_bed_station1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}, 'aed1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot4:player,patient_legs1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}, 'aed1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: stack(robot1:player,cpr_board1:item,patient1:item,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}, 'aed1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising -5
reward after normalising -0.050505050505050504
reward:  -0.050505050505050504
prev_heuristic: 5
action: move(robot1:player,patient_bed_station1:station,hospital_cart_right1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}, 'aed1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,patient_bed_station1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'stacked': True}, 'aed1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
[INFO 14:07:35] my_main t_env: 100 / 1000
[INFO 14:07:35] my_main Estimated time left: 1 minutes, 21 seconds. Time passed: 18 seconds
prev_heuristic: 0
action: move(robot1:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot1:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot1:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot1:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot1:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
[INFO 14:08:35] my_main Saving models to results/models/qmix_seed448089844_None_2024-10-01 14:07:16.320697/100
Saving best action with reward  0.0012048192771084336
[INFO 14:08:35] my_main Recent Stats | t_env:        100 | Episode:        1
ep_length_mean:          100.0000	epsilon:                   1.0000	return_mean:               0.7413	return_std:                0.0000
test_ep_length_mean:     100.0000	test_return_mean:          0.0012	test_return_std:           0.0000	
prev_heuristic: 0
action: move(robot1:player,hospital_cart_left1:station,patient_bed_station1:station)
self.state in handleaction: {}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot1:player,patient_bed_station1:station,hospital_cart1:station)
self.state in handleaction: {}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot2:player,hospital_cart_right1:station,hospital_cart_left1:station)
self.state in handleaction: {}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot3:player,table1:station,hospital_cart_left1:station)
self.state in handleaction: {}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot1:player,hospital_cart1:station,hospital_cart_right1:station)
self.state in handleaction: {}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot1:player,hospital_cart_right1:station,hospital_cart1:station)
self.state in handleaction: {}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot3:player,hospital_cart_left1:station,table1:station)
self.state in handleaction: {}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot4:player,hospital_cart1:station,patient_bed_station1:station)
self.state in handleaction: {}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: pick-up(robot2:player,syringe1:item,hospital_cart_left1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 5
reward after normalising 0.7142857142857143
reward:  0.7142857142857143
prev_heuristic: 5
action: move(robot1:player,hospital_cart1:station,table1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,table1:station,hospital_cart_right1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,table1:station,hospital_cart_right1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,hospital_cart_right1:station,table1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: unstack(robot3:player,pump1:item,aed1:item,hospital_cart_right1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 5
reward after normalising 0.45454545454545453
reward:  0.45454545454545453
prev_heuristic: 10
action: stack(robot3:player,pump1:item,aed1:item,hospital_cart_right1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 5
reward before normalising -5
reward after normalising -0.4166666666666667
reward:  -0.4166666666666667
prev_heuristic: 5
action: move(robot1:player,table1:station,hospital_cart_left1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,hospital_cart_right1:station,patient_bed_station1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,patient_bed_station1:station,hospital_cart1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,patient_legs1:station,hospital_cart1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,hospital_cart_left1:station,patient_bed_station1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,hospital_cart1:station,patient_bed_station1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot4:player,patient_bed_station1:station,patient_legs1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,patient_bed_station1:station,hospital_cart_right1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,hospital_cart1:station,hospital_cart_right1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,patient_bed_station1:station,hospital_cart_left1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: unstack(robot1:player,pump1:item,aed1:item,hospital_cart_right1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 5
reward after normalising 0.20833333333333334
reward:  0.20833333333333334
prev_heuristic: 10
action: move(robot2:player,hospital_cart_right1:station,hospital_cart_left1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,hospital_cart_right1:station,hospital_cart1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot2:player,hospital_cart_left1:station,hospital_cart1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: stack(robot1:player,pump1:item,cpr_board1:item,hospital_cart1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}, 'cpr_board1': {'stacked': True}}
curr_heuristic: 5
reward before normalising -5
reward after normalising -0.18518518518518517
reward:  -0.18518518518518517
prev_heuristic: 5
action: move(robot2:player,hospital_cart1:station,patient_legs1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}, 'cpr_board1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,hospital_cart1:station,hospital_cart_right1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}, 'cpr_board1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot4:player,patient_legs1:station,hospital_cart1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}, 'cpr_board1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,hospital_cart_right1:station,patient_bed_station1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}, 'cpr_board1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,patient_legs1:station,patient_bed_station1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}, 'cpr_board1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,patient_bed_station1:station,hospital_cart_right1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}, 'cpr_board1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,hospital_cart_left1:station,hospital_cart_right1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}, 'cpr_board1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,patient_bed_station1:station,table1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}, 'cpr_board1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,hospital_cart_right1:station,patient_legs1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}, 'cpr_board1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,hospital_cart_right1:station,patient_legs1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}, 'cpr_board1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot4:player,hospital_cart1:station,hospital_cart_left1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}, 'cpr_board1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot4:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}, 'cpr_board1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,table1:station,hospital_cart1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}, 'cpr_board1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,hospital_cart1:station,hospital_cart_left1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}, 'cpr_board1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: place(robot2:player,syringe1:item,patient_legs1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}, 'cpr_board1': {'stacked': True}}
curr_heuristic: 0
reward before normalising -5
reward after normalising -0.14705882352941177
reward:  -0.14705882352941177
prev_heuristic: 0
action: move(robot4:player,patient_legs1:station,patient_bed_station1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}, 'cpr_board1': {'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot2:player,patient_legs1:station,table1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}, 'cpr_board1': {'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot3:player,patient_legs1:station,table1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}, 'cpr_board1': {'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot4:player,patient_bed_station1:station,patient_legs1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}, 'cpr_board1': {'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot2:player,table1:station,hospital_cart_left1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}, 'cpr_board1': {'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot3:player,table1:station,patient_legs1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}, 'cpr_board1': {'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot2:player,hospital_cart_left1:station,hospital_cart1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}, 'cpr_board1': {'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot3:player,patient_legs1:station,hospital_cart_right1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}, 'cpr_board1': {'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot2:player,hospital_cart1:station,patient_bed_station1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}, 'cpr_board1': {'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: pick-up(robot3:player,aed1:item,hospital_cart_right1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'picked-up': False}, 'cpr_board1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 5
reward after normalising 0.11904761904761904
reward:  0.11904761904761904
prev_heuristic: 5
action: move(robot4:player,patient_legs1:station,hospital_cart1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'picked-up': False}, 'cpr_board1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,hospital_cart_right1:station,hospital_cart_left1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'picked-up': False}, 'cpr_board1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,hospital_cart_left1:station,table1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'picked-up': False}, 'cpr_board1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: unstack(robot4:player,pump1:item,cpr_board1:item,hospital_cart1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'picked-up': False}, 'cpr_board1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 5
reward after normalising 0.1111111111111111
reward:  0.1111111111111111
prev_heuristic: 10
action: stack(robot4:player,pump1:item,cpr_board1:item,hospital_cart1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'picked-up': False}, 'cpr_board1': {'stacked': True}}
curr_heuristic: 5
reward before normalising -5
reward after normalising -0.10869565217391304
reward:  -0.10869565217391304
prev_heuristic: 5
action: move(robot2:player,patient_bed_station1:station,table1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'picked-up': False}, 'cpr_board1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,hospital_cart_left1:station,patient_bed_station1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'picked-up': False}, 'cpr_board1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,table1:station,hospital_cart1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'picked-up': False}, 'cpr_board1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: unstack(robot2:player,pump1:item,cpr_board1:item,hospital_cart1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'picked-up': False}, 'cpr_board1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 5
reward after normalising 0.10416666666666667
reward:  0.10416666666666667
prev_heuristic: 10
action: stack(robot2:player,pump1:item,cpr_board1:item,hospital_cart1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'picked-up': False}, 'cpr_board1': {'stacked': True}}
curr_heuristic: 5
reward before normalising -5
reward after normalising -0.10204081632653061
reward:  -0.10204081632653061
prev_heuristic: 5
action: move(robot2:player,hospital_cart1:station,patient_legs1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'picked-up': False}, 'cpr_board1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,patient_legs1:station,hospital_cart_right1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'picked-up': False}, 'cpr_board1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,patient_bed_station1:station,hospital_cart_left1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'picked-up': False}, 'cpr_board1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,hospital_cart_right1:station,patient_bed_station1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'picked-up': False}, 'cpr_board1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,hospital_cart_left1:station,table1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'picked-up': False}, 'cpr_board1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,table1:station,hospital_cart_left1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'picked-up': False}, 'cpr_board1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,patient_bed_station1:station,hospital_cart1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'picked-up': False}, 'cpr_board1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot4:player,hospital_cart1:station,hospital_cart_left1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'picked-up': False}, 'cpr_board1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,hospital_cart1:station,hospital_cart_right1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'picked-up': False}, 'cpr_board1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot4:player,hospital_cart_left1:station,patient_bed_station1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'picked-up': False}, 'cpr_board1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,hospital_cart_right1:station,table1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'picked-up': False}, 'cpr_board1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot4:player,patient_bed_station1:station,hospital_cart1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'picked-up': False}, 'cpr_board1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,table1:station,hospital_cart_right1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'picked-up': False}, 'cpr_board1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: unstack(robot4:player,pump1:item,cpr_board1:item,hospital_cart1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'picked-up': False}, 'cpr_board1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 5
reward after normalising 0.08620689655172414
reward:  0.08620689655172414
prev_heuristic: 10
action: move(robot1:player,hospital_cart_left1:station,table1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'picked-up': False}, 'cpr_board1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,hospital_cart_right1:station,table1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'picked-up': False}, 'cpr_board1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot2:player,table1:station,patient_bed_station1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'picked-up': False}, 'cpr_board1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot4:player,hospital_cart1:station,hospital_cart_left1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'picked-up': False}, 'cpr_board1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot2:player,patient_bed_station1:station,hospital_cart_right1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'picked-up': False}, 'cpr_board1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,table1:station,hospital_cart_left1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'picked-up': False}, 'cpr_board1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot2:player,hospital_cart_right1:station,patient_legs1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'picked-up': False}, 'cpr_board1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: place(robot4:player,pump1:item,hospital_cart_left1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'picked-up': False}, 'cpr_board1': {'stacked': True}}
curr_heuristic: 5
reward before normalising -5
reward after normalising -0.08064516129032258
reward:  -0.08064516129032258
prev_heuristic: 5
action: move(robot1:player,table1:station,patient_legs1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'picked-up': False}, 'cpr_board1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,patient_legs1:station,table1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'picked-up': False}, 'cpr_board1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,patient_legs1:station,table1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'picked-up': False}, 'cpr_board1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,hospital_cart_left1:station,patient_bed_station1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'picked-up': False}, 'cpr_board1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,table1:station,hospital_cart1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'picked-up': False}, 'cpr_board1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,table1:station,patient_bed_station1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'picked-up': False}, 'cpr_board1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,hospital_cart1:station,patient_bed_station1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'picked-up': False}, 'cpr_board1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,patient_bed_station1:station,hospital_cart_right1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'picked-up': False}, 'cpr_board1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,patient_bed_station1:station,hospital_cart_left1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'picked-up': False}, 'cpr_board1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,patient_bed_station1:station,table1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'picked-up': False}, 'cpr_board1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot4:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'picked-up': False}, 'cpr_board1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,hospital_cart_right1:station,hospital_cart_left1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'picked-up': False}, 'cpr_board1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: pick-up(robot4:player,syringe1:item,patient_legs1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'picked-up': False}, 'cpr_board1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 5
reward after normalising 0.07142857142857142
reward:  0.07142857142857142
prev_heuristic: 10
action: move(robot2:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'picked-up': False}, 'cpr_board1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: place(robot4:player,syringe1:item,patient_legs1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'picked-up': False}, 'cpr_board1': {'stacked': True}}
curr_heuristic: 5
reward before normalising -5
reward after normalising -0.07042253521126761
reward:  -0.07042253521126761
prev_heuristic: 5
action: move(robot1:player,hospital_cart_left1:station,hospital_cart1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'picked-up': False}, 'cpr_board1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,table1:station,patient_legs1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'picked-up': False}, 'cpr_board1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,hospital_cart1:station,table1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'picked-up': False}, 'cpr_board1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot4:player,patient_legs1:station,hospital_cart1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'picked-up': False}, 'cpr_board1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,table1:station,patient_bed_station1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'picked-up': False}, 'cpr_board1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,patient_legs1:station,hospital_cart_left1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'picked-up': False}, 'cpr_board1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: pick-up(robot1:player,patient1:item,patient_bed_station1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'picked-up': False}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,hospital_cart_left1:station,table1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'picked-up': False}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,patient_legs1:station,table1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'picked-up': False}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,patient_bed_station1:station,hospital_cart_right1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'picked-up': False}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,hospital_cart_right1:station,patient_bed_station1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'picked-up': False}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: place(robot3:player,aed1:item,table1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'picked-up': False}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False}}
curr_heuristic: 0
reward before normalising -5
reward after normalising -0.0641025641025641
reward:  -0.0641025641025641
prev_heuristic: 0
action: move(robot2:player,table1:station,hospital_cart_right1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'picked-up': False}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot3:player,table1:station,hospital_cart_left1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'picked-up': False}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot4:player,hospital_cart1:station,patient_legs1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'picked-up': False}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot2:player,hospital_cart_right1:station,table1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'picked-up': False}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: pick-up(robot3:player,pump1:item,hospital_cart_left1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'picked-up': False}, 'aed1': {'picked-up': False}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 5
reward after normalising 0.06172839506172839
reward:  0.06172839506172839
prev_heuristic: 5
action: move(robot3:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'picked-up': False}, 'aed1': {'picked-up': False}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,table1:station,hospital_cart_right1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'picked-up': False}, 'aed1': {'picked-up': False}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,patient_legs1:station,hospital_cart_right1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'picked-up': False}, 'aed1': {'picked-up': False}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,hospital_cart_right1:station,table1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'picked-up': False}, 'aed1': {'picked-up': False}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,hospital_cart_right1:station,hospital_cart_left1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'picked-up': False}, 'aed1': {'picked-up': False}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: pick-up(robot4:player,syringe1:item,patient_legs1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'picked-up': False}, 'aed1': {'picked-up': False}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 5
reward after normalising 0.05813953488372093
reward:  0.05813953488372093
prev_heuristic: 10
action: move(robot1:player,patient_bed_station1:station,hospital_cart_left1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'picked-up': False}, 'aed1': {'picked-up': False}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot2:player,table1:station,hospital_cart_left1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'picked-up': False}, 'aed1': {'picked-up': False}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'picked-up': False}, 'aed1': {'picked-up': False}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: place(robot1:player,patient1:item,hospital_cart_left1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'picked-up': False}, 'aed1': {'picked-up': False}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot2:player,hospital_cart_left1:station,patient_bed_station1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'picked-up': False}, 'aed1': {'picked-up': False}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,patient_legs1:station,hospital_cart1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'picked-up': False}, 'aed1': {'picked-up': False}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot4:player,patient_legs1:station,patient_bed_station1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'picked-up': False}, 'aed1': {'picked-up': False}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,hospital_cart_left1:station,hospital_cart1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'picked-up': False}, 'aed1': {'picked-up': False}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: stack(robot3:player,pump1:item,cpr_board1:item,hospital_cart1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising -5
reward after normalising -0.05555555555555555
reward:  -0.05555555555555555
prev_heuristic: 5
action: move(robot3:player,hospital_cart1:station,table1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot4:player,patient_bed_station1:station,hospital_cart_left1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,patient_bed_station1:station,hospital_cart1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot4:player,hospital_cart_left1:station,hospital_cart1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,hospital_cart1:station,table1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,table1:station,hospital_cart_left1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,table1:station,patient_bed_station1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,hospital_cart1:station,patient_bed_station1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,patient_bed_station1:station,patient_legs1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,patient_bed_station1:station,patient_legs1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,patient_legs1:station,hospital_cart_left1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,patient_legs1:station,hospital_cart_right1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,patient_legs1:station,patient_bed_station1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'pump1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
[INFO 14:08:52] my_main t_env: 200 / 1000
[INFO 14:08:52] my_main Estimated time left: 10 minutes, 12 seconds. Time passed: 1 minutes, 34 seconds
prev_heuristic: 0
action: move(robot1:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot1:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot1:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot1:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot1:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
[INFO 14:09:51] my_main Recent Stats | t_env:        200 | Episode:        2
ep_length_mean:          100.0000	epsilon:                   0.9981	return_mean:               0.5061	return_std:                0.0000
test_ep_length_mean:     100.0000	test_return_mean:          0.0012	test_return_std:           0.0000	
prev_heuristic: 0
action: move(robot3:player,table1:station,hospital_cart_right1:station)
self.state in handleaction: {}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot1:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot2:player,hospital_cart_right1:station,patient_legs1:station)
self.state in handleaction: {}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot3:player,hospital_cart_right1:station,patient_legs1:station)
self.state in handleaction: {}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot4:player,hospital_cart1:station,hospital_cart_left1:station)
self.state in handleaction: {}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot3:player,patient_legs1:station,table1:station)
self.state in handleaction: {}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot4:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot2:player,patient_legs1:station,patient_bed_station1:station)
self.state in handleaction: {}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot1:player,patient_legs1:station,hospital_cart_left1:station)
self.state in handleaction: {}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot1:player,hospital_cart_left1:station,table1:station)
self.state in handleaction: {}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot2:player,patient_bed_station1:station,patient_legs1:station)
self.state in handleaction: {}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot2:player,patient_legs1:station,hospital_cart_left1:station)
self.state in handleaction: {}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot4:player,patient_legs1:station,patient_bed_station1:station)
self.state in handleaction: {}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: pick-up(robot2:player,syringe1:item,hospital_cart_left1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 5
reward after normalising 0.5
reward:  0.5
prev_heuristic: 5
action: move(robot3:player,table1:station,hospital_cart_left1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,table1:station,hospital_cart_right1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,hospital_cart_left1:station,hospital_cart1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,hospital_cart_left1:station,table1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,hospital_cart_right1:station,hospital_cart_left1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: stack(robot2:player,syringe1:item,cpr_board1:item,hospital_cart1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}}
curr_heuristic: 0
reward before normalising -5
reward after normalising -0.4166666666666667
reward:  -0.4166666666666667
prev_heuristic: 0
action: pick-up(robot4:player,patient1:item,patient_bed_station1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot1:player,hospital_cart_left1:station,table1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot3:player,table1:station,hospital_cart1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot4:player,patient_bed_station1:station,hospital_cart1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: unstack(robot2:player,syringe1:item,cpr_board1:item,hospital_cart1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 5
reward after normalising 0.35714285714285715
reward:  0.35714285714285715
prev_heuristic: 5
action: move(robot3:player,hospital_cart1:station,patient_legs1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,patient_legs1:station,hospital_cart1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,table1:station,hospital_cart_right1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,hospital_cart1:station,patient_bed_station1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot4:player,hospital_cart1:station,patient_legs1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,hospital_cart1:station,hospital_cart_left1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: unstack(robot1:player,pump1:item,aed1:item,hospital_cart_right1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 5
reward after normalising 0.2631578947368421
reward:  0.2631578947368421
prev_heuristic: 10
action: move(robot2:player,hospital_cart_left1:station,hospital_cart1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: stack(robot1:player,pump1:item,aed1:item,hospital_cart_right1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 5
reward before normalising -5
reward after normalising -0.25
reward:  -0.25
prev_heuristic: 5
action: move(robot2:player,hospital_cart1:station,table1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,patient_bed_station1:station,table1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,table1:station,patient_legs1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,table1:station,patient_bed_station1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot4:player,patient_legs1:station,hospital_cart_left1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: unstack(robot1:player,pump1:item,aed1:item,hospital_cart_right1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 5
reward after normalising 0.20833333333333334
reward:  0.20833333333333334
prev_heuristic: 10
action: move(robot3:player,patient_bed_station1:station,hospital_cart_right1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: stack(robot1:player,pump1:item,aed1:item,hospital_cart_right1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 5
reward before normalising -5
reward after normalising -0.2
reward:  -0.2
prev_heuristic: 5
action: move(robot3:player,hospital_cart_right1:station,hospital_cart_left1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,hospital_cart_right1:station,hospital_cart1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot4:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,hospital_cart_left1:station,hospital_cart1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot4:player,patient_legs1:station,patient_bed_station1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,patient_legs1:station,patient_bed_station1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,hospital_cart1:station,patient_legs1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,hospital_cart1:station,patient_legs1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,patient_legs1:station,hospital_cart_left1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,hospital_cart_left1:station,hospital_cart1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,patient_legs1:station,table1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,table1:station,patient_legs1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,patient_bed_station1:station,table1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot4:player,patient_bed_station1:station,hospital_cart1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,patient_legs1:station,hospital_cart_right1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: place(robot2:player,syringe1:item,table1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 0
reward before normalising -5
reward after normalising -0.14705882352941177
reward:  -0.14705882352941177
prev_heuristic: 0
action: stack(robot4:player,patient1:item,cpr_board1:item,hospital_cart1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 10
reward after normalising 0.2857142857142857
reward:  0.2857142857142857
prev_heuristic: 10
action: move(robot1:player,hospital_cart_right1:station,hospital_cart_left1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot4:player,hospital_cart1:station,hospital_cart_left1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot4:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,hospital_cart_left1:station,hospital_cart_right1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot2:player,table1:station,hospital_cart_left1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,hospital_cart_right1:station,patient_legs1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot2:player,hospital_cart_left1:station,patient_bed_station1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,hospital_cart1:station,patient_bed_station1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,patient_legs1:station,hospital_cart_left1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot2:player,patient_bed_station1:station,table1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,hospital_cart_left1:station,hospital_cart1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,patient_bed_station1:station,table1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot2:player,table1:station,hospital_cart_right1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot2:player,hospital_cart_right1:station,hospital_cart_left1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot2:player,hospital_cart_left1:station,patient_bed_station1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,table1:station,hospital_cart_right1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,hospital_cart1:station,patient_bed_station1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,hospital_cart_right1:station,hospital_cart_left1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,patient_bed_station1:station,hospital_cart_right1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,hospital_cart_left1:station,hospital_cart_right1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,hospital_cart_right1:station,hospital_cart_left1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot2:player,patient_bed_station1:station,table1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot4:player,patient_legs1:station,hospital_cart1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,hospital_cart_left1:station,table1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot2:player,table1:station,hospital_cart_right1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: unstack(robot3:player,pump1:item,aed1:item,hospital_cart_right1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 15
reward before normalising 5
reward after normalising 0.08771929824561403
reward:  0.08771929824561403
prev_heuristic: 15
action: move(robot2:player,hospital_cart_right1:station,hospital_cart1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: move(robot4:player,hospital_cart1:station,hospital_cart_left1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: move(robot1:player,table1:station,patient_legs1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: move(robot3:player,hospital_cart_right1:station,table1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: move(robot2:player,hospital_cart1:station,patient_bed_station1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: move(robot3:player,table1:station,patient_bed_station1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: move(robot1:player,patient_legs1:station,patient_bed_station1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: move(robot1:player,patient_bed_station1:station,hospital_cart_left1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: move(robot2:player,patient_bed_station1:station,table1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: place(robot3:player,pump1:item,patient_bed_station1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 10
reward before normalising -5
reward after normalising -0.07936507936507936
reward:  -0.07936507936507936
prev_heuristic: 10
action: move(robot3:player,patient_bed_station1:station,hospital_cart_right1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot2:player,table1:station,hospital_cart_right1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,hospital_cart_right1:station,hospital_cart_left1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,hospital_cart_left1:station,table1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot2:player,hospital_cart_right1:station,hospital_cart1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot4:player,hospital_cart_left1:station,hospital_cart1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,patient_legs1:station,patient_bed_station1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot2:player,hospital_cart1:station,hospital_cart_right1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,table1:station,hospital_cart_right1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,patient_bed_station1:station,hospital_cart1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot2:player,hospital_cart_right1:station,table1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot4:player,hospital_cart1:station,patient_bed_station1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot2:player,table1:station,hospital_cart1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,hospital_cart1:station,patient_legs1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: unstack(robot2:player,patient1:item,cpr_board1:item,hospital_cart1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 0
reward before normalising -10
reward after normalising -0.12658227848101267
reward:  -0.12658227848101267
prev_heuristic: 0
action: move(robot3:player,hospital_cart_right1:station,patient_bed_station1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot1:player,patient_legs1:station,hospital_cart1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot4:player,patient_bed_station1:station,hospital_cart_left1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot3:player,patient_bed_station1:station,hospital_cart_right1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot1:player,hospital_cart1:station,patient_bed_station1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot2:player,hospital_cart1:station,patient_legs1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot3:player,hospital_cart_right1:station,patient_bed_station1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot1:player,patient_bed_station1:station,patient_legs1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot4:player,hospital_cart_left1:station,patient_bed_station1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot4:player,patient_bed_station1:station,hospital_cart1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot1:player,patient_legs1:station,patient_bed_station1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot4:player,hospital_cart1:station,patient_legs1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot1:player,patient_bed_station1:station,hospital_cart_left1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot2:player,patient_legs1:station,hospital_cart_left1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot4:player,patient_legs1:station,patient_bed_station1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot2:player,hospital_cart_left1:station,table1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot4:player,patient_bed_station1:station,hospital_cart_left1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot2:player,table1:station,patient_bed_station1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot2:player,patient_bed_station1:station,hospital_cart_left1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot1:player,hospital_cart_left1:station,hospital_cart1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot2:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: pick-up(robot1:player,cpr_board1:item,hospital_cart1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 5
reward after normalising 0.05319148936170213
reward:  0.05319148936170213
prev_heuristic: 5
action: move(robot3:player,patient_bed_station1:station,patient_legs1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,patient_legs1:station,hospital_cart1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot4:player,hospital_cart_left1:station,patient_bed_station1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,patient_legs1:station,table1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: pick-up(robot4:player,pump1:item,patient_bed_station1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False}, 'aed1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 5
reward after normalising 0.05154639175257732
reward:  0.05154639175257732
prev_heuristic: 10
action: move(robot2:player,hospital_cart1:station,hospital_cart_left1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False}, 'aed1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,table1:station,hospital_cart_left1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False}, 'aed1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,hospital_cart_left1:station,hospital_cart1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False}, 'aed1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: place(robot1:player,cpr_board1:item,hospital_cart1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False}, 'aed1': {'stacked': True}}
curr_heuristic: 5
reward before normalising -5
reward after normalising -0.05
reward:  -0.05
prev_heuristic: 5
action: move(robot3:player,hospital_cart1:station,table1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False}, 'aed1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot4:player,patient_bed_station1:station,patient_legs1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False}, 'aed1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
[INFO 14:10:07] my_main t_env: 300 / 1000
[INFO 14:10:07] my_main Estimated time left: 8 minutes, 45 seconds. Time passed: 2 minutes, 49 seconds
prev_heuristic: 0
action: move(robot1:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot1:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot1:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot1:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot1:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
[INFO 14:11:05] my_main Recent Stats | t_env:        300 | Episode:        3
ep_length_mean:          100.0000	epsilon:                   0.9962	return_mean:               0.4168	return_std:                0.0000
test_ep_length_mean:     100.0000	test_return_mean:          0.0012	test_return_std:           0.0000	
prev_heuristic: 0
action: move(robot4:player,hospital_cart1:station,patient_legs1:station)
self.state in handleaction: {}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: pick-up(robot1:player,syringe1:item,hospital_cart_left1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 5
reward after normalising 2.5
reward:  2.5
prev_heuristic: 5
action: move(robot2:player,hospital_cart_right1:station,hospital_cart1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,table1:station,hospital_cart1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,hospital_cart1:station,patient_legs1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot4:player,patient_legs1:station,hospital_cart1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,hospital_cart1:station,hospital_cart_right1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,patient_legs1:station,hospital_cart_left1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,hospital_cart_left1:station,table1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot4:player,hospital_cart1:station,patient_bed_station1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,hospital_cart_left1:station,patient_bed_station1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot4:player,patient_bed_station1:station,hospital_cart_left1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,table1:station,hospital_cart_right1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,hospital_cart_right1:station,patient_legs1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,patient_bed_station1:station,hospital_cart_right1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,patient_legs1:station,patient_bed_station1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: unstack(robot3:player,pump1:item,aed1:item,hospital_cart_right1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 5
reward after normalising 0.5
reward:  0.5
prev_heuristic: 10
action: move(robot4:player,hospital_cart_left1:station,patient_bed_station1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,hospital_cart_right1:station,patient_legs1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,hospital_cart_right1:station,patient_bed_station1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot2:player,patient_bed_station1:station,hospital_cart_right1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: pick-up(robot4:player,patient1:item,patient_bed_station1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,patient_bed_station1:station,patient_legs1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: pick-up(robot2:player,aed1:item,hospital_cart_right1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'aed1': {'picked-up': False}}
curr_heuristic: 15
reward before normalising 5
reward after normalising 0.35714285714285715
reward:  0.35714285714285715
prev_heuristic: 15
action: move(robot2:player,hospital_cart_right1:station,patient_legs1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'aed1': {'picked-up': False}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: move(robot3:player,patient_legs1:station,table1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'aed1': {'picked-up': False}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: place(robot4:player,patient1:item,patient_bed_station1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'aed1': {'picked-up': False}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: move(robot1:player,patient_legs1:station,hospital_cart_right1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'aed1': {'picked-up': False}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: move(robot3:player,table1:station,patient_bed_station1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'aed1': {'picked-up': False}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: move(robot4:player,patient_bed_station1:station,patient_legs1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'aed1': {'picked-up': False}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: move(robot2:player,patient_legs1:station,hospital_cart_left1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'aed1': {'picked-up': False}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: move(robot4:player,patient_legs1:station,hospital_cart_left1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'aed1': {'picked-up': False}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: move(robot1:player,hospital_cart_right1:station,hospital_cart_left1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'aed1': {'picked-up': False}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: move(robot2:player,hospital_cart_left1:station,table1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'aed1': {'picked-up': False}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: stack(robot3:player,pump1:item,patient1:item,patient_bed_station1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False}, 'pump1': {'stacked': True}}
curr_heuristic: 20
reward before normalising 5
reward after normalising 0.2631578947368421
reward:  0.2631578947368421
prev_heuristic: 20
action: move(robot2:player,table1:station,hospital_cart_left1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False}, 'pump1': {'stacked': True}}
curr_heuristic: 20
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 20
action: move(robot2:player,hospital_cart_left1:station,hospital_cart_right1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False}, 'pump1': {'stacked': True}}
curr_heuristic: 20
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 20
action: move(robot3:player,patient_bed_station1:station,hospital_cart_left1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False}, 'pump1': {'stacked': True}}
curr_heuristic: 20
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 20
action: move(robot1:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False}, 'pump1': {'stacked': True}}
curr_heuristic: 20
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 20
action: move(robot2:player,hospital_cart_right1:station,patient_bed_station1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False}, 'pump1': {'stacked': True}}
curr_heuristic: 20
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 20
action: move(robot4:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False}, 'pump1': {'stacked': True}}
curr_heuristic: 20
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 20
action: move(robot1:player,patient_legs1:station,hospital_cart1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False}, 'pump1': {'stacked': True}}
curr_heuristic: 20
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 20
action: move(robot2:player,patient_bed_station1:station,patient_legs1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False}, 'pump1': {'stacked': True}}
curr_heuristic: 20
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 20
action: move(robot2:player,patient_legs1:station,table1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False}, 'pump1': {'stacked': True}}
curr_heuristic: 20
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 20
action: move(robot3:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False}, 'pump1': {'stacked': True}}
curr_heuristic: 20
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 20
action: move(robot2:player,table1:station,patient_legs1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False}, 'pump1': {'stacked': True}}
curr_heuristic: 20
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 20
action: move(robot3:player,patient_legs1:station,hospital_cart_left1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False}, 'pump1': {'stacked': True}}
curr_heuristic: 20
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 20
action: move(robot4:player,patient_legs1:station,hospital_cart1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False}, 'pump1': {'stacked': True}}
curr_heuristic: 20
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 20
action: move(robot1:player,hospital_cart1:station,patient_legs1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False}, 'pump1': {'stacked': True}}
curr_heuristic: 20
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 20
action: move(robot1:player,patient_legs1:station,table1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False}, 'pump1': {'stacked': True}}
curr_heuristic: 20
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 20
action: move(robot2:player,patient_legs1:station,patient_bed_station1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False}, 'pump1': {'stacked': True}}
curr_heuristic: 20
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 20
action: pick-up(robot4:player,cpr_board1:item,hospital_cart1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False}, 'pump1': {'stacked': True}, 'cpr_board1': {'picked-up': False}}
curr_heuristic: 25
reward before normalising 5
reward after normalising 0.15625
reward:  0.15625
prev_heuristic: 25
action: move(robot2:player,patient_bed_station1:station,patient_legs1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False}, 'pump1': {'stacked': True}, 'cpr_board1': {'picked-up': False}}
curr_heuristic: 25
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 25
action: move(robot1:player,table1:station,patient_bed_station1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False}, 'pump1': {'stacked': True}, 'cpr_board1': {'picked-up': False}}
curr_heuristic: 25
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 25
action: move(robot2:player,patient_legs1:station,hospital_cart_left1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False}, 'pump1': {'stacked': True}, 'cpr_board1': {'picked-up': False}}
curr_heuristic: 25
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 25
action: move(robot3:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False}, 'pump1': {'stacked': True}, 'cpr_board1': {'picked-up': False}}
curr_heuristic: 25
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 25
action: place(robot4:player,cpr_board1:item,hospital_cart1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False}, 'pump1': {'stacked': True}, 'cpr_board1': {'picked-up': False}}
curr_heuristic: 20
reward before normalising -5
reward after normalising -0.14705882352941177
reward:  -0.14705882352941177
prev_heuristic: 20
action: move(robot3:player,patient_legs1:station,hospital_cart_left1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False}, 'pump1': {'stacked': True}, 'cpr_board1': {'picked-up': False}}
curr_heuristic: 20
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 20
action: move(robot1:player,patient_bed_station1:station,hospital_cart_left1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False}, 'pump1': {'stacked': True}, 'cpr_board1': {'picked-up': False}}
curr_heuristic: 20
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 20
action: move(robot2:player,hospital_cart_left1:station,hospital_cart1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False}, 'pump1': {'stacked': True}, 'cpr_board1': {'picked-up': False}}
curr_heuristic: 20
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 20
action: move(robot4:player,hospital_cart1:station,patient_legs1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False}, 'pump1': {'stacked': True}, 'cpr_board1': {'picked-up': False}}
curr_heuristic: 20
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 20
action: move(robot1:player,hospital_cart_left1:station,table1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False}, 'pump1': {'stacked': True}, 'cpr_board1': {'picked-up': False}}
curr_heuristic: 20
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 20
action: stack(robot2:player,aed1:item,cpr_board1:item,hospital_cart1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 15
reward before normalising -5
reward after normalising -0.1388888888888889
reward:  -0.1388888888888889
prev_heuristic: 15
action: move(robot3:player,hospital_cart_left1:station,hospital_cart_right1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: move(robot3:player,hospital_cart_right1:station,patient_bed_station1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: move(robot4:player,patient_legs1:station,hospital_cart1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: move(robot1:player,table1:station,patient_legs1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: move(robot2:player,hospital_cart1:station,patient_bed_station1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: move(robot4:player,hospital_cart1:station,hospital_cart_left1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: move(robot1:player,patient_legs1:station,table1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: move(robot2:player,patient_bed_station1:station,hospital_cart_right1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: move(robot1:player,table1:station,patient_bed_station1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: move(robot2:player,hospital_cart_right1:station,hospital_cart1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: move(robot2:player,hospital_cart1:station,patient_legs1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: move(robot4:player,hospital_cart_left1:station,hospital_cart1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: move(robot1:player,patient_bed_station1:station,patient_legs1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: move(robot3:player,patient_bed_station1:station,hospital_cart_left1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: move(robot2:player,patient_legs1:station,patient_bed_station1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: move(robot1:player,patient_legs1:station,table1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: move(robot2:player,patient_bed_station1:station,table1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: move(robot3:player,hospital_cart_left1:station,table1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: move(robot2:player,table1:station,hospital_cart1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: move(robot2:player,hospital_cart1:station,hospital_cart_left1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: place(robot1:player,syringe1:item,table1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 10
reward before normalising -5
reward after normalising -0.09803921568627451
reward:  -0.09803921568627451
prev_heuristic: 10
action: move(robot2:player,hospital_cart_left1:station,hospital_cart1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,table1:station,hospital_cart_left1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,hospital_cart_left1:station,table1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot4:player,hospital_cart1:station,patient_legs1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,table1:station,hospital_cart_right1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,hospital_cart_right1:station,hospital_cart_left1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot2:player,hospital_cart1:station,hospital_cart_left1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,table1:station,hospital_cart_left1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot4:player,patient_legs1:station,patient_bed_station1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,hospital_cart_left1:station,patient_bed_station1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot2:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot4:player,patient_bed_station1:station,hospital_cart1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot2:player,patient_legs1:station,patient_bed_station1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot4:player,hospital_cart1:station,patient_legs1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,hospital_cart_left1:station,patient_bed_station1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot2:player,patient_bed_station1:station,hospital_cart_right1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: unstack(robot3:player,pump1:item,patient1:item,patient_bed_station1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 5
reward before normalising -5
reward after normalising -0.0847457627118644
reward:  -0.0847457627118644
prev_heuristic: 5
action: stack(robot3:player,pump1:item,patient1:item,patient_bed_station1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 10
reward before normalising 5
reward after normalising 0.08333333333333333
reward:  0.08333333333333333
prev_heuristic: 10
action: move(robot4:player,patient_legs1:station,hospital_cart_left1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,patient_bed_station1:station,table1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot2:player,hospital_cart_right1:station,table1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: unstack(robot3:player,pump1:item,patient1:item,patient_bed_station1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 5
reward before normalising -5
reward after normalising -0.07936507936507936
reward:  -0.07936507936507936
prev_heuristic: 5
action: move(robot1:player,table1:station,hospital_cart_left1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,table1:station,hospital_cart_right1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,patient_bed_station1:station,hospital_cart_right1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,hospital_cart_right1:station,patient_bed_station1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot4:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,patient_bed_station1:station,table1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,hospital_cart_right1:station,table1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot4:player,patient_legs1:station,hospital_cart_left1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: stack(robot3:player,pump1:item,syringe1:item,table1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 0
reward before normalising -5
reward after normalising -0.07246376811594203
reward:  -0.07246376811594203
prev_heuristic: 0
action: move(robot4:player,hospital_cart_left1:station,hospital_cart1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot1:player,patient_legs1:station,table1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot2:player,table1:station,hospital_cart_left1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: unstack(robot3:player,pump1:item,syringe1:item,table1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 5
reward before normalising 5
reward after normalising 0.07142857142857142
reward:  0.07142857142857142
prev_heuristic: 5
action: move(robot4:player,hospital_cart1:station,patient_legs1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: stack(robot3:player,pump1:item,syringe1:item,table1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 0
reward before normalising -5
reward after normalising -0.07042253521126761
reward:  -0.07042253521126761
prev_heuristic: 0
action: move(robot4:player,patient_legs1:station,patient_bed_station1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot2:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: unstack(robot3:player,pump1:item,syringe1:item,table1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 5
reward before normalising 5
reward after normalising 0.06944444444444445
reward:  0.06944444444444445
prev_heuristic: 5
action: move(robot2:player,patient_legs1:station,hospital_cart_left1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot4:player,patient_bed_station1:station,hospital_cart_left1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,table1:station,hospital_cart_right1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,hospital_cart_right1:station,patient_legs1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,hospital_cart_left1:station,table1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,table1:station,hospital_cart_right1:station)
self.state in handleaction: {'syringe1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: pick-up(robot2:player,syringe1:item,table1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 10
reward before normalising 5
reward after normalising 0.0641025641025641
reward:  0.0641025641025641
prev_heuristic: 10
action: move(robot4:player,hospital_cart_left1:station,patient_bed_station1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,hospital_cart_right1:station,table1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot2:player,table1:station,hospital_cart_right1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,patient_legs1:station,hospital_cart_right1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot2:player,hospital_cart_right1:station,patient_legs1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: place(robot3:player,pump1:item,table1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 5
reward before normalising -5
reward after normalising -0.06172839506172839
reward:  -0.06172839506172839
prev_heuristic: 5
action: move(robot1:player,hospital_cart_right1:station,table1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,table1:station,hospital_cart1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,patient_legs1:station,hospital_cart_left1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot4:player,patient_bed_station1:station,patient_legs1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot4:player,patient_legs1:station,patient_bed_station1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: pick-up(robot1:player,pump1:item,table1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False}, 'cpr_board1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 10
reward before normalising 5
reward after normalising 0.058823529411764705
reward:  0.058823529411764705
prev_heuristic: 10
action: move(robot1:player,table1:station,hospital_cart_left1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False}, 'cpr_board1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot4:player,patient_bed_station1:station,hospital_cart_left1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False}, 'cpr_board1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,hospital_cart1:station,hospital_cart_left1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False}, 'cpr_board1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot2:player,hospital_cart_left1:station,patient_bed_station1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False}, 'cpr_board1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,hospital_cart_left1:station,hospital_cart_right1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False}, 'cpr_board1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot2:player,patient_bed_station1:station,hospital_cart_left1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False}, 'cpr_board1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,hospital_cart_left1:station,patient_bed_station1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False}, 'cpr_board1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot4:player,hospital_cart_left1:station,hospital_cart1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False}, 'cpr_board1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,hospital_cart_right1:station,patient_bed_station1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False}, 'cpr_board1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: place(robot2:player,syringe1:item,hospital_cart_left1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False}, 'cpr_board1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 5
reward before normalising -5
reward after normalising -0.05434782608695652
reward:  -0.05434782608695652
prev_heuristic: 5
action: move(robot2:player,hospital_cart_left1:station,hospital_cart1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False}, 'cpr_board1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot4:player,hospital_cart1:station,patient_bed_station1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False}, 'cpr_board1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: unstack(robot2:player,aed1:item,cpr_board1:item,hospital_cart1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False}, 'cpr_board1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 10
reward before normalising 5
reward after normalising 0.05263157894736842
reward:  0.05263157894736842
prev_heuristic: 10
action: move(robot3:player,patient_bed_station1:station,patient_legs1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False}, 'cpr_board1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,patient_bed_station1:station,patient_legs1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False}, 'cpr_board1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot2:player,hospital_cart1:station,table1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False}, 'cpr_board1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,patient_legs1:station,hospital_cart_left1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False}, 'cpr_board1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot2:player,table1:station,hospital_cart_right1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False}, 'cpr_board1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,hospital_cart_left1:station,hospital_cart_right1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False}, 'cpr_board1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,patient_legs1:station,table1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False}, 'cpr_board1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,hospital_cart_right1:station,hospital_cart1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False}, 'cpr_board1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot2:player,hospital_cart_right1:station,hospital_cart_left1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False}, 'cpr_board1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,table1:station,hospital_cart_left1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False}, 'cpr_board1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,hospital_cart1:station,patient_legs1:station)
self.state in handleaction: {'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False}, 'cpr_board1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
[INFO 14:11:21] my_main t_env: 400 / 1000
[INFO 14:11:21] my_main Estimated time left: 7 minutes, 26 seconds. Time passed: 4 minutes, 4 seconds
prev_heuristic: 0
action: move(robot1:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot1:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot1:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot1:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot1:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
[INFO 14:12:23] my_main Recent Stats | t_env:        400 | Episode:        4
ep_length_mean:          100.0000	epsilon:                   0.9943	return_mean:               0.4647	return_std:                0.0000
test_ep_length_mean:     100.0000	test_return_mean:          0.0012	test_return_std:           0.0000	
prev_heuristic: 0
action: move(robot1:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot2:player,hospital_cart_right1:station,patient_legs1:station)
self.state in handleaction: {}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot2:player,patient_legs1:station,hospital_cart_left1:station)
self.state in handleaction: {}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot3:player,table1:station,hospital_cart_right1:station)
self.state in handleaction: {}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot2:player,hospital_cart_left1:station,hospital_cart_right1:station)
self.state in handleaction: {}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot3:player,hospital_cart_right1:station,patient_bed_station1:station)
self.state in handleaction: {}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot3:player,patient_bed_station1:station,hospital_cart1:station)
self.state in handleaction: {}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot1:player,patient_legs1:station,hospital_cart_right1:station)
self.state in handleaction: {}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot4:player,hospital_cart1:station,hospital_cart_left1:station)
self.state in handleaction: {}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot1:player,hospital_cart_right1:station,hospital_cart1:station)
self.state in handleaction: {}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot2:player,hospital_cart_right1:station,table1:station)
self.state in handleaction: {}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot3:player,hospital_cart1:station,patient_bed_station1:station)
self.state in handleaction: {}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot2:player,table1:station,hospital_cart_left1:station)
self.state in handleaction: {}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot3:player,patient_bed_station1:station,hospital_cart_left1:station)
self.state in handleaction: {}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: pick-up(robot1:player,cpr_board1:item,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 5
reward after normalising 0.5
reward:  0.5
prev_heuristic: 5
action: move(robot3:player,hospital_cart_left1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,hospital_cart1:station,hospital_cart_right1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,hospital_cart_left1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,hospital_cart1:station,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,hospital_cart1:station,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,hospital_cart_right1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,table1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,table1:station,hospital_cart_right1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot4:player,hospital_cart_left1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,hospital_cart_left1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,hospital_cart_right1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,hospital_cart1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,patient_legs1:station,hospital_cart_right1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,patient_bed_station1:station,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: pick-up(robot4:player,patient1:item,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,patient_legs1:station,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,hospital_cart_right1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,hospital_cart1:station,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,table1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,table1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,patient_legs1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,table1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,hospital_cart1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,hospital_cart1:station,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,patient_bed_station1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,table1:station,hospital_cart_right1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,hospital_cart_right1:station,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,hospital_cart1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,table1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,patient_legs1:station,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,table1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,patient_bed_station1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,hospital_cart1:station,hospital_cart_right1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot4:player,patient_bed_station1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot4:player,patient_legs1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: place(robot4:player,patient1:item,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,hospital_cart1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,patient_bed_station1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,patient_legs1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot4:player,patient_bed_station1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,patient_bed_station1:station,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,patient_legs1:station,hospital_cart_right1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,table1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,hospital_cart_right1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,hospital_cart_left1:station,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot4:player,hospital_cart_left1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,hospital_cart_right1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: pick-up(robot3:player,syringe1:item,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'syringe1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 5
reward after normalising 0.1111111111111111
reward:  0.1111111111111111
prev_heuristic: 10
action: move(robot1:player,table1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'syringe1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: place(robot3:player,syringe1:item,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'syringe1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising -5
reward after normalising -0.10869565217391304
reward:  -0.10869565217391304
prev_heuristic: 5
action: move(robot2:player,patient_legs1:station,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'syringe1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,hospital_cart_left1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'syringe1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,table1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'syringe1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,hospital_cart_left1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'syringe1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: place(robot1:player,cpr_board1:item,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'syringe1': {'picked-up': False}}
curr_heuristic: 0
reward before normalising -5
reward after normalising -0.10204081632653061
reward:  -0.10204081632653061
prev_heuristic: 0
action: move(robot1:player,hospital_cart1:station,hospital_cart_right1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'syringe1': {'picked-up': False}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot3:player,patient_bed_station1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'syringe1': {'picked-up': False}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot2:player,patient_bed_station1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'syringe1': {'picked-up': False}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: unstack(robot1:player,pump1:item,aed1:item,hospital_cart_right1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'syringe1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 5
reward after normalising 0.09615384615384616
reward:  0.09615384615384616
prev_heuristic: 5
action: move(robot2:player,hospital_cart_left1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'syringe1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: pick-up(robot3:player,syringe1:item,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'syringe1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 5
reward after normalising 0.09615384615384616
reward:  0.09615384615384616
prev_heuristic: 10
action: pick-up(robot2:player,cpr_board1:item,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'syringe1': {'picked-up': False}}
curr_heuristic: 15
reward before normalising 5
reward after normalising 0.09433962264150944
reward:  0.09433962264150944
prev_heuristic: 15
action: place(robot2:player,cpr_board1:item,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'syringe1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising -5
reward after normalising -0.09259259259259259
reward:  -0.09259259259259259
prev_heuristic: 10
action: move(robot3:player,hospital_cart_left1:station,hospital_cart_right1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'syringe1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot4:player,hospital_cart1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'syringe1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,hospital_cart_right1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'syringe1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: stack(robot3:player,syringe1:item,aed1:item,hospital_cart_right1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 15
reward before normalising 5
reward after normalising 0.09090909090909091
reward:  0.09090909090909091
prev_heuristic: 15
action: move(robot3:player,hospital_cart_right1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: move(robot2:player,hospital_cart1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: move(robot3:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: move(robot1:player,hospital_cart1:station,hospital_cart_right1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: move(robot2:player,hospital_cart_left1:station,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: move(robot4:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: move(robot4:player,patient_legs1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: move(robot3:player,patient_legs1:station,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: move(robot3:player,table1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: move(robot4:player,hospital_cart1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: move(robot3:player,patient_legs1:station,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: move(robot4:player,patient_bed_station1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: move(robot1:player,hospital_cart_right1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: move(robot2:player,table1:station,hospital_cart_right1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: move(robot1:player,patient_bed_station1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: move(robot3:player,table1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: move(robot1:player,hospital_cart1:station,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: move(robot3:player,patient_legs1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: move(robot4:player,hospital_cart1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: move(robot2:player,hospital_cart_right1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: place(robot1:player,pump1:item,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 10
reward before normalising -5
reward after normalising -0.07352941176470588
reward:  -0.07352941176470588
prev_heuristic: 10
action: move(robot4:player,patient_legs1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot2:player,hospital_cart_left1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,hospital_cart_left1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,table1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: pick-up(robot2:player,patient1:item,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot2:player,patient_bed_station1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,patient_bed_station1:station,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,patient_legs1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot4:player,hospital_cart_left1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,hospital_cart1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,table1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,hospital_cart_left1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot4:player,hospital_cart1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,hospital_cart1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot4:player,patient_legs1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,patient_legs1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,patient_bed_station1:station,hospital_cart_right1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,hospital_cart_right1:station,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot2:player,hospital_cart_left1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,patient_bed_station1:station,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: place(robot2:player,patient1:item,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,table1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: pick-up(robot3:player,patient1:item,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot2:player,patient_bed_station1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,patient_bed_station1:station,hospital_cart_right1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot4:player,hospital_cart_left1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot4:player,patient_bed_station1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot4:player,patient_legs1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,hospital_cart_right1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,table1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot2:player,patient_legs1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: place(robot3:player,patient1:item,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot2:player,hospital_cart_left1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,patient_bed_station1:station,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,table1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,hospital_cart_left1:station,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,hospital_cart_left1:station,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,table1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,table1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,patient_legs1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot4:player,hospital_cart_left1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,hospital_cart_left1:station,hospital_cart_right1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,patient_bed_station1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,hospital_cart_left1:station,hospital_cart_right1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
[INFO 14:12:39] my_main t_env: 500 / 1000
[INFO 14:12:39] my_main Estimated time left: 6 minutes, 27 seconds. Time passed: 5 minutes, 21 seconds
prev_heuristic: 0
action: move(robot1:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot1:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot1:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot1:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot1:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
[INFO 14:13:38] my_main Recent Stats | t_env:        500 | Episode:        5
ep_length_mean:          100.0000	epsilon:                   0.9924	return_mean:               0.4224	return_std:                0.0000
test_ep_length_mean:     100.0000	test_return_mean:          0.0012	test_return_std:           0.0000	
prev_heuristic: 0
action: unstack(robot2:player,pump1:item,aed1:item,hospital_cart_right1:station)
self.state in handleaction: {}
curr_heuristic: 5
reward before normalising 5
reward after normalising 5.0
reward:  5.0
prev_heuristic: 5
action: move(robot3:player,table1:station,patient_bed_station1:station)
self.state in handleaction: {}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,hospital_cart_left1:station,hospital_cart_right1:station)
self.state in handleaction: {}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,hospital_cart_right1:station,hospital_cart1:station)
self.state in handleaction: {}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: pick-up(robot3:player,patient1:item,patient_bed_station1:station)
self.state in handleaction: {'patient1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,patient_bed_station1:station,hospital_cart_right1:station)
self.state in handleaction: {'patient1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,hospital_cart1:station,patient_bed_station1:station)
self.state in handleaction: {'patient1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,hospital_cart_right1:station,patient_legs1:station)
self.state in handleaction: {'patient1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,hospital_cart_right1:station,patient_bed_station1:station)
self.state in handleaction: {'patient1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,patient_bed_station1:station,table1:station)
self.state in handleaction: {'patient1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,patient_bed_station1:station,table1:station)
self.state in handleaction: {'patient1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,table1:station,patient_bed_station1:station)
self.state in handleaction: {'patient1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,patient_legs1:station,hospital_cart_left1:station)
self.state in handleaction: {'patient1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot4:player,hospital_cart1:station,patient_legs1:station)
self.state in handleaction: {'patient1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,table1:station,hospital_cart_left1:station)
self.state in handleaction: {'patient1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,patient_bed_station1:station,table1:station)
self.state in handleaction: {'patient1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,hospital_cart_left1:station,hospital_cart_right1:station)
self.state in handleaction: {'patient1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot4:player,patient_legs1:station,hospital_cart1:station)
self.state in handleaction: {'patient1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,hospital_cart_left1:station,hospital_cart_right1:station)
self.state in handleaction: {'patient1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,hospital_cart_right1:station,hospital_cart1:station)
self.state in handleaction: {'patient1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,hospital_cart_right1:station,patient_legs1:station)
self.state in handleaction: {'patient1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: stack(robot3:player,patient1:item,cpr_board1:item,hospital_cart1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}}
curr_heuristic: 15
reward before normalising 10
reward after normalising 0.9090909090909091
reward:  0.9090909090909091
prev_heuristic: 15
action: move(robot2:player,table1:station,hospital_cart_right1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: move(robot3:player,hospital_cart1:station,hospital_cart_left1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: unstack(robot4:player,patient1:item,cpr_board1:item,hospital_cart1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}}
curr_heuristic: 5
reward before normalising -10
reward after normalising -0.7692307692307693
reward:  -0.7692307692307693
prev_heuristic: 5
action: move(robot3:player,hospital_cart_left1:station,table1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot4:player,hospital_cart1:station,patient_legs1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,hospital_cart_right1:station,hospital_cart1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,table1:station,hospital_cart_left1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot4:player,patient_legs1:station,patient_bed_station1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,hospital_cart1:station,patient_bed_station1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,patient_legs1:station,patient_bed_station1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,hospital_cart_left1:station,table1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,table1:station,hospital_cart_right1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,patient_bed_station1:station,table1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,patient_bed_station1:station,patient_legs1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: place(robot2:player,pump1:item,patient_legs1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}}
curr_heuristic: 0
reward before normalising -5
reward after normalising -0.25
reward:  -0.25
prev_heuristic: 0
action: move(robot3:player,hospital_cart_right1:station,hospital_cart1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot4:player,patient_bed_station1:station,hospital_cart1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot1:player,table1:station,hospital_cart1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot2:player,patient_legs1:station,hospital_cart1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot4:player,hospital_cart1:station,patient_bed_station1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot1:player,hospital_cart1:station,hospital_cart_left1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot3:player,hospital_cart1:station,hospital_cart_right1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: place(robot4:player,patient1:item,patient_bed_station1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: pick-up(robot2:player,cpr_board1:item,hospital_cart1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 5
reward after normalising 0.2
reward:  0.2
prev_heuristic: 5
action: move(robot3:player,hospital_cart_right1:station,hospital_cart_left1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: pick-up(robot4:player,patient1:item,patient_bed_station1:station)
self.state in handleaction: {'patient1': {'picked-up': False}, 'cpr_board1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: pick-up(robot1:player,syringe1:item,hospital_cart_left1:station)
self.state in handleaction: {'patient1': {'picked-up': False}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 5
reward after normalising 0.19230769230769232
reward:  0.19230769230769232
prev_heuristic: 10
action: move(robot2:player,hospital_cart1:station,patient_bed_station1:station)
self.state in handleaction: {'patient1': {'picked-up': False}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,hospital_cart_left1:station,hospital_cart1:station)
self.state in handleaction: {'patient1': {'picked-up': False}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot2:player,patient_bed_station1:station,hospital_cart_right1:station)
self.state in handleaction: {'patient1': {'picked-up': False}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: place(robot1:player,syringe1:item,hospital_cart1:station)
self.state in handleaction: {'patient1': {'picked-up': False}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising -5
reward after normalising -0.17857142857142858
reward:  -0.17857142857142858
prev_heuristic: 5
action: move(robot2:player,hospital_cart_right1:station,patient_bed_station1:station)
self.state in handleaction: {'patient1': {'picked-up': False}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,hospital_cart_left1:station,patient_bed_station1:station)
self.state in handleaction: {'patient1': {'picked-up': False}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot4:player,patient_bed_station1:station,patient_legs1:station)
self.state in handleaction: {'patient1': {'picked-up': False}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,patient_bed_station1:station,hospital_cart_right1:station)
self.state in handleaction: {'patient1': {'picked-up': False}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: pick-up(robot3:player,aed1:item,hospital_cart_right1:station)
self.state in handleaction: {'patient1': {'picked-up': False}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'aed1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 5
reward after normalising 0.16666666666666666
reward:  0.16666666666666666
prev_heuristic: 10
action: move(robot1:player,hospital_cart1:station,patient_legs1:station)
self.state in handleaction: {'patient1': {'picked-up': False}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'aed1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: place(robot2:player,cpr_board1:item,patient_bed_station1:station)
self.state in handleaction: {'patient1': {'picked-up': False}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'aed1': {'picked-up': False}}
curr_heuristic: 15
reward before normalising 5
reward after normalising 0.16129032258064516
reward:  0.16129032258064516
prev_heuristic: 15
action: place(robot3:player,aed1:item,hospital_cart_right1:station)
self.state in handleaction: {'patient1': {'picked-up': False}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'aed1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising -5
reward after normalising -0.16129032258064516
reward:  -0.16129032258064516
prev_heuristic: 10
action: move(robot1:player,patient_legs1:station,hospital_cart_left1:station)
self.state in handleaction: {'patient1': {'picked-up': False}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'aed1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot2:player,patient_bed_station1:station,hospital_cart_right1:station)
self.state in handleaction: {'patient1': {'picked-up': False}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'aed1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,hospital_cart_right1:station,patient_legs1:station)
self.state in handleaction: {'patient1': {'picked-up': False}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'aed1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {'patient1': {'picked-up': False}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'aed1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,patient_legs1:station,table1:station)
self.state in handleaction: {'patient1': {'picked-up': False}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'aed1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,patient_legs1:station,table1:station)
self.state in handleaction: {'patient1': {'picked-up': False}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'aed1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot2:player,hospital_cart_right1:station,patient_legs1:station)
self.state in handleaction: {'patient1': {'picked-up': False}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'aed1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot2:player,patient_legs1:station,table1:station)
self.state in handleaction: {'patient1': {'picked-up': False}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'aed1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: stack(robot4:player,patient1:item,pump1:item,patient_legs1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'aed1': {'picked-up': False}, 'pump1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot2:player,table1:station,hospital_cart_right1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'aed1': {'picked-up': False}, 'pump1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot2:player,hospital_cart_right1:station,table1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'aed1': {'picked-up': False}, 'pump1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,table1:station,hospital_cart_right1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'aed1': {'picked-up': False}, 'pump1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: pick-up(robot3:player,aed1:item,hospital_cart_right1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'aed1': {'picked-up': False}, 'pump1': {'stacked': True}}
curr_heuristic: 15
reward before normalising 5
reward after normalising 0.12195121951219512
reward:  0.12195121951219512
prev_heuristic: 15
action: place(robot3:player,aed1:item,hospital_cart_right1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'aed1': {'picked-up': False}, 'pump1': {'stacked': True}}
curr_heuristic: 10
reward before normalising -5
reward after normalising -0.11904761904761904
reward:  -0.11904761904761904
prev_heuristic: 10
action: move(robot1:player,table1:station,patient_bed_station1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'aed1': {'picked-up': False}, 'pump1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: pick-up(robot3:player,aed1:item,hospital_cart_right1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'aed1': {'picked-up': False}, 'pump1': {'stacked': True}}
curr_heuristic: 15
reward before normalising 5
reward after normalising 0.11627906976744186
reward:  0.11627906976744186
prev_heuristic: 15
action: move(robot4:player,patient_legs1:station,patient_bed_station1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'aed1': {'picked-up': False}, 'pump1': {'stacked': True}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: move(robot1:player,patient_bed_station1:station,patient_legs1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'aed1': {'picked-up': False}, 'pump1': {'stacked': True}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: move(robot2:player,table1:station,hospital_cart_right1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'aed1': {'picked-up': False}, 'pump1': {'stacked': True}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: place(robot3:player,aed1:item,hospital_cart_right1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'aed1': {'picked-up': False}, 'pump1': {'stacked': True}}
curr_heuristic: 10
reward before normalising -5
reward after normalising -0.1111111111111111
reward:  -0.1111111111111111
prev_heuristic: 10
action: move(robot1:player,patient_legs1:station,hospital_cart_left1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'aed1': {'picked-up': False}, 'pump1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot2:player,hospital_cart_right1:station,patient_bed_station1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'aed1': {'picked-up': False}, 'pump1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: pick-up(robot4:player,cpr_board1:item,patient_bed_station1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'aed1': {'picked-up': False}, 'pump1': {'stacked': True}}
curr_heuristic: 5
reward before normalising -5
reward after normalising -0.10638297872340426
reward:  -0.10638297872340426
prev_heuristic: 5
action: move(robot1:player,hospital_cart_left1:station,hospital_cart_right1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'aed1': {'picked-up': False}, 'pump1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot4:player,patient_bed_station1:station,patient_legs1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'aed1': {'picked-up': False}, 'pump1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,hospital_cart_right1:station,hospital_cart_left1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'aed1': {'picked-up': False}, 'pump1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,patient_bed_station1:station,hospital_cart_left1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'aed1': {'picked-up': False}, 'pump1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: pick-up(robot1:player,aed1:item,hospital_cart_right1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'aed1': {'picked-up': False}, 'pump1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 5
reward after normalising 0.1
reward:  0.1
prev_heuristic: 10
action: move(robot1:player,hospital_cart_right1:station,patient_legs1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'aed1': {'picked-up': False}, 'pump1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,hospital_cart_left1:station,patient_bed_station1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'aed1': {'picked-up': False}, 'pump1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: stack(robot4:player,cpr_board1:item,patient1:item,patient_legs1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'aed1': {'picked-up': False}, 'pump1': {'stacked': True}}
curr_heuristic: 5
reward before normalising -5
reward after normalising -0.09615384615384616
reward:  -0.09615384615384616
prev_heuristic: 5
action: move(robot1:player,patient_legs1:station,patient_bed_station1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'aed1': {'picked-up': False}, 'pump1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,hospital_cart_left1:station,table1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'aed1': {'picked-up': False}, 'pump1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,patient_bed_station1:station,patient_legs1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'aed1': {'picked-up': False}, 'pump1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot4:player,patient_legs1:station,patient_bed_station1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'aed1': {'picked-up': False}, 'pump1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,patient_bed_station1:station,hospital_cart1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'aed1': {'picked-up': False}, 'pump1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,table1:station,hospital_cart_left1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'aed1': {'picked-up': False}, 'pump1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,patient_legs1:station,patient_bed_station1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'aed1': {'picked-up': False}, 'pump1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot4:player,patient_bed_station1:station,hospital_cart1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'aed1': {'picked-up': False}, 'pump1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot4:player,hospital_cart1:station,patient_bed_station1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'aed1': {'picked-up': False}, 'pump1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,hospital_cart1:station,table1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'aed1': {'picked-up': False}, 'pump1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot4:player,patient_bed_station1:station,patient_legs1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'aed1': {'picked-up': False}, 'pump1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: place(robot1:player,aed1:item,table1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'aed1': {'picked-up': False}, 'pump1': {'stacked': True}}
curr_heuristic: 0
reward before normalising -5
reward after normalising -0.08928571428571429
reward:  -0.08928571428571429
prev_heuristic: 0
action: move(robot1:player,table1:station,hospital_cart_right1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'aed1': {'picked-up': False}, 'pump1': {'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot2:player,hospital_cart_left1:station,hospital_cart_right1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'aed1': {'picked-up': False}, 'pump1': {'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot1:player,hospital_cart_right1:station,hospital_cart1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'aed1': {'picked-up': False}, 'pump1': {'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot2:player,hospital_cart_right1:station,hospital_cart1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'aed1': {'picked-up': False}, 'pump1': {'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: pick-up(robot1:player,syringe1:item,hospital_cart1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'aed1': {'picked-up': False}, 'pump1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 5
reward after normalising 0.08196721311475409
reward:  0.08196721311475409
prev_heuristic: 5
action: move(robot2:player,hospital_cart1:station,patient_bed_station1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'aed1': {'picked-up': False}, 'pump1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,patient_bed_station1:station,table1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'aed1': {'picked-up': False}, 'pump1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,table1:station,hospital_cart_right1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'aed1': {'picked-up': False}, 'pump1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,patient_bed_station1:station,hospital_cart1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'aed1': {'picked-up': False}, 'pump1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot4:player,patient_legs1:station,patient_bed_station1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'aed1': {'picked-up': False}, 'pump1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot4:player,patient_bed_station1:station,patient_legs1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'aed1': {'picked-up': False}, 'pump1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,hospital_cart1:station,hospital_cart_right1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'aed1': {'picked-up': False}, 'pump1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,hospital_cart1:station,hospital_cart_left1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'aed1': {'picked-up': False}, 'pump1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,hospital_cart_right1:station,table1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'aed1': {'picked-up': False}, 'pump1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot4:player,patient_legs1:station,hospital_cart_left1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'aed1': {'picked-up': False}, 'pump1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,hospital_cart_left1:station,hospital_cart1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'aed1': {'picked-up': False}, 'pump1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot4:player,hospital_cart_left1:station,patient_bed_station1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'aed1': {'picked-up': False}, 'pump1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: stack(robot1:player,syringe1:item,aed1:item,table1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 5
reward after normalising 0.07042253521126761
reward:  0.07042253521126761
prev_heuristic: 10
action: move(robot1:player,table1:station,hospital_cart_left1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,hospital_cart1:station,hospital_cart_left1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,hospital_cart_left1:station,patient_bed_station1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,patient_bed_station1:station,hospital_cart1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot2:player,hospital_cart_right1:station,table1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,patient_legs1:station,hospital_cart_left1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot2:player,table1:station,hospital_cart1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot2:player,hospital_cart1:station,hospital_cart_left1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,hospital_cart_left1:station,hospital_cart_right1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,hospital_cart1:station,patient_legs1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot2:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,hospital_cart_right1:station,patient_bed_station1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,patient_legs1:station,patient_bed_station1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot2:player,patient_legs1:station,patient_bed_station1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,patient_bed_station1:station,hospital_cart_left1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,patient_bed_station1:station,hospital_cart_right1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,hospital_cart_left1:station,patient_bed_station1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,patient_bed_station1:station,hospital_cart_left1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot2:player,patient_bed_station1:station,hospital_cart_right1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,hospital_cart_right1:station,patient_legs1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: unstack(robot3:player,cpr_board1:item,patient1:item,patient_legs1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 15
reward before normalising 5
reward after normalising 0.05952380952380952
reward:  0.05952380952380952
prev_heuristic: 15
action: move(robot1:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: move(robot2:player,hospital_cart_right1:station,hospital_cart1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: move(robot4:player,patient_bed_station1:station,patient_legs1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: move(robot2:player,hospital_cart1:station,hospital_cart_right1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: move(robot3:player,patient_legs1:station,hospital_cart_right1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: move(robot1:player,patient_legs1:station,hospital_cart1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: move(robot3:player,hospital_cart_right1:station,table1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: move(robot2:player,hospital_cart_right1:station,hospital_cart_left1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: move(robot1:player,hospital_cart1:station,patient_bed_station1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: move(robot4:player,patient_legs1:station,hospital_cart_left1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: move(robot1:player,patient_bed_station1:station,table1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: move(robot1:player,table1:station,hospital_cart_left1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: move(robot2:player,hospital_cart_left1:station,hospital_cart_right1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: move(robot3:player,table1:station,hospital_cart1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: place(robot3:player,cpr_board1:item,hospital_cart1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 10
reward before normalising -5
reward after normalising -0.05154639175257732
reward:  -0.05154639175257732
prev_heuristic: 10
action: move(robot4:player,hospital_cart_left1:station,hospital_cart1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,hospital_cart_left1:station,hospital_cart1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot2:player,hospital_cart_right1:station,table1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,hospital_cart1:station,patient_legs1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: pick-up(robot3:player,cpr_board1:item,hospital_cart1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 15
reward before normalising 5
reward after normalising 0.050505050505050504
reward:  0.050505050505050504
prev_heuristic: 15
action: move(robot1:player,patient_legs1:station,hospital_cart1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: move(robot2:player,table1:station,patient_legs1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: place(robot3:player,cpr_board1:item,hospital_cart1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 10
reward before normalising -5
reward after normalising -0.05
reward:  -0.05
prev_heuristic: 10
action: move(robot4:player,hospital_cart1:station,patient_legs1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
[INFO 14:13:57] my_main t_env: 600 / 1000
[INFO 14:13:57] my_main Estimated time left: 5 minutes, 13 seconds. Time passed: 6 minutes, 40 seconds
prev_heuristic: 0
action: move(robot1:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot1:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot1:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot1:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot1:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
[INFO 14:15:01] my_main Saving models to results/models/qmix_seed448089844_None_2024-10-01 14:07:16.320697/600
Saving best action with reward  0.0012048192771084336
[INFO 14:15:01] my_main Recent Stats | t_env:        600 | Episode:        6
ep_length_mean:          100.0000	epsilon:                   0.9905	return_mean:               0.4411	return_std:                0.0000
test_ep_length_mean:     100.0000	test_return_mean:          0.0012	test_return_std:           0.0000	
prev_heuristic: 0
action: move(robot2:player,hospital_cart_right1:station,hospital_cart1:station)
self.state in handleaction: {}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot1:player,hospital_cart_left1:station,hospital_cart1:station)
self.state in handleaction: {}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot2:player,hospital_cart1:station,table1:station)
self.state in handleaction: {}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: pick-up(robot1:player,cpr_board1:item,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 5
reward after normalising 1.6666666666666667
reward:  1.6666666666666667
prev_heuristic: 5
action: move(robot2:player,table1:station,hospital_cart_right1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,table1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,hospital_cart_right1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,hospital_cart1:station,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,table1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,hospital_cart1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,hospital_cart1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,hospital_cart_left1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,patient_bed_station1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot4:player,hospital_cart1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,patient_legs1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: pick-up(robot4:player,syringe1:item,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 5
reward after normalising 0.45454545454545453
reward:  0.45454545454545453
prev_heuristic: 10
action: move(robot2:player,hospital_cart1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,patient_bed_station1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,patient_bed_station1:station,hospital_cart_right1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,hospital_cart1:station,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot2:player,patient_legs1:station,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,hospital_cart_right1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot2:player,table1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: place(robot4:player,syringe1:item,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising -5
reward after normalising -0.3125
reward:  -0.3125
prev_heuristic: 5
action: move(robot1:player,hospital_cart_left1:station,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,table1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot4:player,hospital_cart_left1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,hospital_cart1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot4:player,hospital_cart1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,patient_bed_station1:station,hospital_cart_right1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,hospital_cart1:station,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,table1:station,hospital_cart_right1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,hospital_cart_right1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot4:player,patient_legs1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,patient_legs1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,hospital_cart_right1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,patient_bed_station1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot4:player,hospital_cart_left1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,patient_bed_station1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,hospital_cart_left1:station,hospital_cart_right1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,hospital_cart_right1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot4:player,patient_bed_station1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,hospital_cart1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,hospital_cart1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: pick-up(robot4:player,syringe1:item,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 5
reward after normalising 0.18518518518518517
reward:  0.18518518518518517
prev_heuristic: 10
action: move(robot3:player,table1:station,hospital_cart_right1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,hospital_cart_left1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,hospital_cart_right1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,hospital_cart_left1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: place(robot4:player,syringe1:item,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising -5
reward after normalising -0.16129032258064516
reward:  -0.16129032258064516
prev_heuristic: 5
action: move(robot1:player,hospital_cart1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,patient_bed_station1:station,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot4:player,hospital_cart_left1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,hospital_cart1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,table1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,hospital_cart_left1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,patient_bed_station1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,patient_legs1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot4:player,hospital_cart1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,hospital_cart1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot4:player,patient_bed_station1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,hospital_cart1:station,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,patient_bed_station1:station,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot4:player,hospital_cart1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,table1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,table1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot4:player,patient_legs1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,patient_legs1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,patient_legs1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,patient_legs1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,hospital_cart_left1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: place(robot1:player,cpr_board1:item,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}}
curr_heuristic: 0
reward before normalising -5
reward after normalising -0.10869565217391304
reward:  -0.10869565217391304
prev_heuristic: 0
action: move(robot2:player,hospital_cart1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: pick-up(robot4:player,patient1:item,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot3:player,hospital_cart1:station,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot4:player,patient_bed_station1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: pick-up(robot1:player,cpr_board1:item,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 5
reward after normalising 0.10416666666666667
reward:  0.10416666666666667
prev_heuristic: 5
action: move(robot2:player,patient_bed_station1:station,hospital_cart_right1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,table1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,hospital_cart1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot4:player,hospital_cart1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,patient_bed_station1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: unstack(robot2:player,pump1:item,aed1:item,hospital_cart_right1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 5
reward after normalising 0.09803921568627451
reward:  0.09803921568627451
prev_heuristic: 10
action: move(robot3:player,hospital_cart_left1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,patient_legs1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,hospital_cart1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot4:player,patient_legs1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,hospital_cart1:station,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot4:player,patient_bed_station1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,patient_legs1:station,hospital_cart_right1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot4:player,hospital_cart1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: place(robot1:player,cpr_board1:item,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising -5
reward after normalising -0.09090909090909091
reward:  -0.09090909090909091
prev_heuristic: 5
action: pick-up(robot1:player,cpr_board1:item,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 5
reward after normalising 0.08928571428571429
reward:  0.08928571428571429
prev_heuristic: 10
action: move(robot2:player,hospital_cart_right1:station,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot2:player,table1:station,hospital_cart_right1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,hospital_cart_right1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,table1:station,hospital_cart_right1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,hospital_cart_right1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot2:player,hospital_cart_right1:station,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,patient_legs1:station,hospital_cart_right1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot2:player,table1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot4:player,hospital_cart_left1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot4:player,hospital_cart1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,hospital_cart_right1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot2:player,patient_legs1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot2:player,hospital_cart_left1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,patient_bed_station1:station,hospital_cart_right1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,hospital_cart_right1:station,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot2:player,patient_bed_station1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,table1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,patient_legs1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot2:player,hospital_cart1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot4:player,patient_bed_station1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot2:player,patient_legs1:station,hospital_cart_right1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,hospital_cart_left1:station,hospital_cart_right1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot4:player,hospital_cart1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,hospital_cart_left1:station,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: pick-up(robot3:player,aed1:item,hospital_cart_right1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'aed1': {'picked-up': False}}
curr_heuristic: 15
reward before normalising 5
reward after normalising 0.07042253521126761
reward:  0.07042253521126761
prev_heuristic: 15
action: move(robot1:player,table1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'aed1': {'picked-up': False}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: move(robot2:player,hospital_cart_right1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'aed1': {'picked-up': False}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: move(robot4:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'aed1': {'picked-up': False}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: move(robot1:player,patient_legs1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'aed1': {'picked-up': False}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: move(robot2:player,hospital_cart_left1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'aed1': {'picked-up': False}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: place(robot1:player,cpr_board1:item,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'aed1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising -5
reward after normalising -0.06756756756756757
reward:  -0.06756756756756757
prev_heuristic: 10
action: move(robot2:player,hospital_cart1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'aed1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,hospital_cart_right1:station,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'aed1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot4:player,patient_legs1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'aed1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,table1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'aed1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot4:player,patient_bed_station1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'aed1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot2:player,patient_legs1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'aed1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,hospital_cart1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'aed1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot2:player,hospital_cart1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'aed1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,patient_bed_station1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'aed1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot2:player,hospital_cart_left1:station,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'aed1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot4:player,hospital_cart1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'aed1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,hospital_cart1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'aed1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,patient_legs1:station,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'aed1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,patient_legs1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'aed1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: place(robot3:player,aed1:item,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'aed1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising -5
reward after normalising -0.060240963855421686
reward:  -0.060240963855421686
prev_heuristic: 5
action: move(robot4:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'aed1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,hospital_cart_left1:station,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'aed1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,table1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'aed1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,table1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'aed1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: place(robot4:player,patient1:item,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'aed1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,hospital_cart_left1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'aed1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,hospital_cart_left1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'aed1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot4:player,patient_legs1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'aed1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,patient_bed_station1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'aed1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,hospital_cart1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'aed1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,table1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'aed1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,hospital_cart1:station,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'aed1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot4:player,hospital_cart1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'aed1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,hospital_cart1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'aed1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'aed1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot4:player,hospital_cart_left1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'aed1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,table1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'aed1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,patient_bed_station1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'aed1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,patient_legs1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'aed1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,patient_legs1:station,hospital_cart_right1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'aed1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot4:player,hospital_cart1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'aed1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,patient_bed_station1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'aed1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: pick-up(robot1:player,patient1:item,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'aed1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,hospital_cart_right1:station,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'aed1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,patient_legs1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'aed1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,patient_bed_station1:station,hospital_cart_right1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'aed1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,table1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'aed1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,patient_bed_station1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'aed1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'aed1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,hospital_cart_right1:station,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'aed1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,patient_legs1:station,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'aed1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot4:player,patient_bed_station1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'syringe1': {'picked-up': False}, 'patient1': {'picked-up': False}, 'aed1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
[INFO 14:15:19] my_main t_env: 700 / 1000
[INFO 14:15:19] my_main Estimated time left: 4 minutes, 5 seconds. Time passed: 8 minutes, 1 seconds
prev_heuristic: 0
action: move(robot1:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot1:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot1:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot1:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot1:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
[INFO 14:16:21] my_main Recent Stats | t_env:        700 | Episode:        7
ep_length_mean:          100.0000	epsilon:                   0.9886	return_mean:               0.4736	return_std:                0.0000
test_ep_length_mean:     100.0000	test_return_mean:          0.0012	test_return_std:           0.0000	
prev_heuristic: 0
action: unstack(robot2:player,pump1:item,aed1:item,hospital_cart_right1:station)
self.state in handleaction: {}
curr_heuristic: 5
reward before normalising 5
reward after normalising 5.0
reward:  5.0
prev_heuristic: 5
action: move(robot3:player,table1:station,patient_legs1:station)
self.state in handleaction: {}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: pick-up(robot4:player,cpr_board1:item,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 5
reward after normalising 2.5
reward:  2.5
prev_heuristic: 10
action: move(robot2:player,hospital_cart_right1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,hospital_cart_left1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: stack(robot2:player,pump1:item,patient1:item,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'stacked': True}, 'patient1': {'stacked': True}}
curr_heuristic: 15
reward before normalising 5
reward after normalising 1.6666666666666667
reward:  1.6666666666666667
prev_heuristic: 15
action: move(robot4:player,hospital_cart1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'stacked': True}, 'patient1': {'stacked': True}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: unstack(robot1:player,pump1:item,patient1:item,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'stacked': True}, 'patient1': {'stacked': True}}
curr_heuristic: 10
reward before normalising -5
reward after normalising -1.25
reward:  -1.25
prev_heuristic: 10
action: move(robot2:player,patient_bed_station1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'stacked': True}, 'patient1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,patient_legs1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'stacked': True}, 'patient1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot2:player,hospital_cart1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'stacked': True}, 'patient1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: pick-up(robot3:player,patient1:item,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'stacked': True}, 'patient1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot4:player,patient_legs1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'stacked': True}, 'patient1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,patient_bed_station1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'stacked': True}, 'patient1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot4:player,patient_bed_station1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'stacked': True}, 'patient1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: stack(robot3:player,patient1:item,syringe1:item,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot4:player,hospital_cart1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,patient_bed_station1:station,hospital_cart_right1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,hospital_cart_left1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot4:player,hospital_cart_left1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot4:player,hospital_cart1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,hospital_cart_right1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,hospital_cart1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot4:player,patient_legs1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,patient_legs1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot4:player,hospital_cart1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,hospital_cart_left1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot4:player,patient_legs1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,patient_bed_station1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot2:player,patient_legs1:station,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,patient_legs1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,hospital_cart1:station,hospital_cart_right1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot4:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,patient_bed_station1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,hospital_cart_right1:station,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot2:player,table1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,hospital_cart_left1:station,hospital_cart_right1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot2:player,hospital_cart_left1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,table1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,hospital_cart_right1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot2:player,patient_bed_station1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot4:player,patient_legs1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot2:player,hospital_cart1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: unstack(robot2:player,patient1:item,syringe1:item,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot4:player,hospital_cart1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,patient_legs1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot4:player,hospital_cart_left1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot2:player,hospital_cart_left1:station,hospital_cart_right1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: place(robot4:player,cpr_board1:item,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}}
curr_heuristic: 15
reward before normalising 5
reward after normalising 0.2
reward:  0.2
prev_heuristic: 15
action: move(robot1:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: move(robot1:player,patient_legs1:station,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: move(robot4:player,patient_bed_station1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: place(robot1:player,pump1:item,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising -5
reward after normalising -0.17857142857142858
reward:  -0.17857142857142858
prev_heuristic: 10
action: move(robot3:player,hospital_cart1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,table1:station,hospital_cart_right1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot4:player,hospital_cart1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,hospital_cart_right1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,patient_legs1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot4:player,patient_bed_station1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,hospital_cart_left1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: stack(robot2:player,patient1:item,aed1:item,hospital_cart_right1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,patient_bed_station1:station,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,table1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot2:player,hospital_cart_right1:station,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,hospital_cart_left1:station,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,hospital_cart1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: pick-up(robot2:player,pump1:item,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 15
reward before normalising 5
reward after normalising 0.1388888888888889
reward:  0.1388888888888889
prev_heuristic: 15
action: move(robot1:player,patient_bed_station1:station,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: move(robot4:player,patient_legs1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: move(robot1:player,table1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: move(robot3:player,table1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: move(robot4:player,patient_bed_station1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: move(robot2:player,table1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: move(robot3:player,patient_bed_station1:station,hospital_cart_right1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: move(robot4:player,hospital_cart_left1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: move(robot1:player,patient_legs1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: move(robot2:player,patient_bed_station1:station,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: move(robot4:player,patient_bed_station1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: move(robot1:player,hospital_cart1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: move(robot3:player,hospital_cart_right1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: move(robot1:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: move(robot2:player,table1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: move(robot1:player,patient_legs1:station,hospital_cart_right1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: move(robot1:player,hospital_cart_right1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: move(robot1:player,hospital_cart1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: move(robot2:player,patient_bed_station1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: pick-up(robot4:player,syringe1:item,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'aed1': {'stacked': True}}
curr_heuristic: 20
reward before normalising 5
reward after normalising 0.09433962264150944
reward:  0.09433962264150944
prev_heuristic: 20
action: move(robot1:player,patient_legs1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'aed1': {'stacked': True}}
curr_heuristic: 20
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 20
action: move(robot2:player,hospital_cart_left1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'aed1': {'stacked': True}}
curr_heuristic: 20
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 20
action: move(robot3:player,patient_legs1:station,hospital_cart_right1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'aed1': {'stacked': True}}
curr_heuristic: 20
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 20
action: pick-up(robot1:player,cpr_board1:item,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'aed1': {'stacked': True}}
curr_heuristic: 15
reward before normalising -5
reward after normalising -0.09259259259259259
reward:  -0.09259259259259259
prev_heuristic: 15
action: move(robot2:player,hospital_cart1:station,hospital_cart_right1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'aed1': {'stacked': True}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: unstack(robot3:player,patient1:item,aed1:item,hospital_cart_right1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'aed1': {'stacked': True}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: move(robot1:player,patient_bed_station1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'picked-up': False}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'aed1': {'stacked': True}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: stack(robot2:player,pump1:item,aed1:item,hospital_cart_right1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'aed1': {'stacked': True}}
curr_heuristic: 10
reward before normalising -5
reward after normalising -0.09090909090909091
reward:  -0.09090909090909091
prev_heuristic: 10
action: move(robot1:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'aed1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot2:player,hospital_cart_right1:station,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'aed1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,hospital_cart_right1:station,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'aed1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: place(robot4:player,syringe1:item,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'aed1': {'stacked': True}}
curr_heuristic: 5
reward before normalising -5
reward after normalising -0.08771929824561403
reward:  -0.08771929824561403
prev_heuristic: 5
action: move(robot1:player,patient_legs1:station,hospital_cart_right1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'aed1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: stack(robot1:player,cpr_board1:item,pump1:item,hospital_cart_right1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'aed1': {'stacked': True}}
curr_heuristic: 0
reward before normalising -5
reward after normalising -0.08620689655172414
reward:  -0.08620689655172414
prev_heuristic: 0
action: move(robot2:player,table1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'aed1': {'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot3:player,table1:station,hospital_cart_right1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'aed1': {'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot4:player,hospital_cart_left1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'aed1': {'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot3:player,hospital_cart_right1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'aed1': {'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot4:player,hospital_cart1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'aed1': {'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: unstack(robot1:player,cpr_board1:item,pump1:item,hospital_cart_right1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'aed1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 5
reward after normalising 0.08064516129032258
reward:  0.08064516129032258
prev_heuristic: 5
action: move(robot3:player,patient_legs1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'aed1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,hospital_cart_right1:station,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'aed1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,hospital_cart1:station,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'aed1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,table1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'aed1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,hospital_cart1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'aed1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,patient_legs1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'aed1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,table1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'aed1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot4:player,patient_legs1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'aed1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,hospital_cart1:station,hospital_cart_right1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'aed1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,hospital_cart_right1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'aed1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,hospital_cart1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'aed1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,hospital_cart_left1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'aed1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot4:player,patient_bed_station1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'aed1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,patient_legs1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'aed1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot4:player,hospital_cart_left1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'aed1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,patient_bed_station1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'aed1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,hospital_cart1:station,hospital_cart_right1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'aed1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot4:player,patient_bed_station1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'aed1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,patient_legs1:station,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'aed1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,hospital_cart1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'aed1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,hospital_cart_right1:station,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'aed1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot4:player,patient_legs1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'aed1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,table1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'aed1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,patient_legs1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'aed1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,table1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'aed1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,patient_legs1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'aed1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot4:player,hospital_cart1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'aed1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,patient_legs1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'aed1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,hospital_cart_left1:station,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'aed1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot4:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'aed1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,hospital_cart1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'aed1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,table1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'aed1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,hospital_cart_left1:station,hospital_cart_right1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'aed1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,patient_bed_station1:station,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'aed1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,table1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'aed1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'aed1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,patient_legs1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'aed1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,hospital_cart_right1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'aed1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot4:player,patient_legs1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'aed1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,hospital_cart_left1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'aed1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,patient_bed_station1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'aed1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,patient_bed_station1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'aed1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot4:player,patient_bed_station1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'aed1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,patient_legs1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'aed1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,patient_bed_station1:station,hospital_cart_right1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}, 'aed1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: stack(robot1:player,cpr_board1:item,syringe1:item,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 0
reward before normalising -5
reward after normalising -0.05747126436781609
reward:  -0.05747126436781609
prev_heuristic: 0
action: move(robot3:player,hospital_cart_right1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot1:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot3:player,hospital_cart_left1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot3:player,hospital_cart1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot1:player,patient_legs1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: place(robot3:player,patient1:item,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot1:player,hospital_cart1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot3:player,patient_legs1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot1:player,patient_legs1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot3:player,hospital_cart1:station,hospital_cart_right1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot1:player,hospital_cart_left1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot2:player,hospital_cart1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot1:player,patient_bed_station1:station,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot2:player,patient_bed_station1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}, 'aed1': {'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
[INFO 14:16:39] my_main t_env: 800 / 1000
[INFO 14:16:39] my_main Estimated time left: 2 minutes, 40 seconds. Time passed: 9 minutes, 22 seconds
prev_heuristic: 0
action: move(robot1:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot1:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot1:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot1:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot1:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
[INFO 14:17:38] my_main Recent Stats | t_env:        800 | Episode:        8
ep_length_mean:          100.0000	epsilon:                   0.9867	return_mean:               0.6550	return_std:                0.0000
test_ep_length_mean:     100.0000	test_return_mean:          0.0012	test_return_std:           0.0000	
prev_heuristic: 0
action: move(robot2:player,hospital_cart_right1:station,hospital_cart1:station)
self.state in handleaction: {}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot3:player,table1:station,patient_bed_station1:station)
self.state in handleaction: {}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot1:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot2:player,hospital_cart1:station,hospital_cart_right1:station)
self.state in handleaction: {}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot2:player,hospital_cart_right1:station,table1:station)
self.state in handleaction: {}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot4:player,hospital_cart1:station,patient_legs1:station)
self.state in handleaction: {}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: pick-up(robot3:player,patient1:item,patient_bed_station1:station)
self.state in handleaction: {'patient1': {'picked-up': False}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot2:player,table1:station,hospital_cart1:station)
self.state in handleaction: {'patient1': {'picked-up': False}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot1:player,patient_legs1:station,hospital_cart1:station)
self.state in handleaction: {'patient1': {'picked-up': False}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot2:player,hospital_cart1:station,patient_bed_station1:station)
self.state in handleaction: {'patient1': {'picked-up': False}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot3:player,patient_bed_station1:station,table1:station)
self.state in handleaction: {'patient1': {'picked-up': False}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot1:player,hospital_cart1:station,patient_bed_station1:station)
self.state in handleaction: {'patient1': {'picked-up': False}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot3:player,table1:station,hospital_cart1:station)
self.state in handleaction: {'patient1': {'picked-up': False}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot3:player,hospital_cart1:station,patient_bed_station1:station)
self.state in handleaction: {'patient1': {'picked-up': False}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot2:player,patient_bed_station1:station,patient_legs1:station)
self.state in handleaction: {'patient1': {'picked-up': False}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot2:player,patient_legs1:station,hospital_cart_right1:station)
self.state in handleaction: {'patient1': {'picked-up': False}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot3:player,patient_bed_station1:station,hospital_cart_left1:station)
self.state in handleaction: {'patient1': {'picked-up': False}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot2:player,hospital_cart_right1:station,hospital_cart1:station)
self.state in handleaction: {'patient1': {'picked-up': False}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot3:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {'patient1': {'picked-up': False}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot1:player,patient_bed_station1:station,hospital_cart_right1:station)
self.state in handleaction: {'patient1': {'picked-up': False}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: pick-up(robot2:player,cpr_board1:item,hospital_cart1:station)
self.state in handleaction: {'patient1': {'picked-up': False}, 'cpr_board1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 5
reward after normalising 0.38461538461538464
reward:  0.38461538461538464
prev_heuristic: 5
action: move(robot1:player,hospital_cart_right1:station,patient_bed_station1:station)
self.state in handleaction: {'patient1': {'picked-up': False}, 'cpr_board1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,patient_legs1:station,hospital_cart_right1:station)
self.state in handleaction: {'patient1': {'picked-up': False}, 'cpr_board1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,patient_bed_station1:station,hospital_cart1:station)
self.state in handleaction: {'patient1': {'picked-up': False}, 'cpr_board1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,hospital_cart1:station,patient_bed_station1:station)
self.state in handleaction: {'patient1': {'picked-up': False}, 'cpr_board1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,hospital_cart1:station,patient_legs1:station)
self.state in handleaction: {'patient1': {'picked-up': False}, 'cpr_board1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,patient_bed_station1:station,table1:station)
self.state in handleaction: {'patient1': {'picked-up': False}, 'cpr_board1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot4:player,patient_legs1:station,patient_bed_station1:station)
self.state in handleaction: {'patient1': {'picked-up': False}, 'cpr_board1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,patient_legs1:station,table1:station)
self.state in handleaction: {'patient1': {'picked-up': False}, 'cpr_board1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,hospital_cart_right1:station,patient_legs1:station)
self.state in handleaction: {'patient1': {'picked-up': False}, 'cpr_board1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot4:player,patient_bed_station1:station,hospital_cart1:station)
self.state in handleaction: {'patient1': {'picked-up': False}, 'cpr_board1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: place(robot2:player,cpr_board1:item,table1:station)
self.state in handleaction: {'patient1': {'picked-up': False}, 'cpr_board1': {'picked-up': False}}
curr_heuristic: 0
reward before normalising -5
reward after normalising -0.2631578947368421
reward:  -0.2631578947368421
prev_heuristic: 0
action: move(robot2:player,table1:station,hospital_cart1:station)
self.state in handleaction: {'patient1': {'picked-up': False}, 'cpr_board1': {'picked-up': False}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot2:player,hospital_cart1:station,patient_bed_station1:station)
self.state in handleaction: {'patient1': {'picked-up': False}, 'cpr_board1': {'picked-up': False}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot3:player,patient_legs1:station,hospital_cart1:station)
self.state in handleaction: {'patient1': {'picked-up': False}, 'cpr_board1': {'picked-up': False}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot2:player,patient_bed_station1:station,hospital_cart_right1:station)
self.state in handleaction: {'patient1': {'picked-up': False}, 'cpr_board1': {'picked-up': False}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot3:player,hospital_cart1:station,hospital_cart_left1:station)
self.state in handleaction: {'patient1': {'picked-up': False}, 'cpr_board1': {'picked-up': False}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: pick-up(robot1:player,cpr_board1:item,table1:station)
self.state in handleaction: {'patient1': {'picked-up': False}, 'cpr_board1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 5
reward after normalising 0.20833333333333334
reward:  0.20833333333333334
prev_heuristic: 5
action: move(robot2:player,hospital_cart_right1:station,patient_legs1:station)
self.state in handleaction: {'patient1': {'picked-up': False}, 'cpr_board1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: stack(robot3:player,patient1:item,syringe1:item,hospital_cart_left1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,table1:station,patient_legs1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,patient_legs1:station,patient_bed_station1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,hospital_cart_left1:station,hospital_cart_right1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: place(robot1:player,cpr_board1:item,patient_bed_station1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 5
reward after normalising 0.17857142857142858
reward:  0.17857142857142858
prev_heuristic: 10
action: move(robot3:player,hospital_cart_right1:station,patient_legs1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot4:player,hospital_cart1:station,hospital_cart_left1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,patient_bed_station1:station,hospital_cart_left1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,patient_legs1:station,table1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,table1:station,hospital_cart_right1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,hospital_cart_left1:station,table1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot4:player,hospital_cart_left1:station,hospital_cart1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,table1:station,hospital_cart_right1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,hospital_cart_right1:station,patient_bed_station1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,hospital_cart_right1:station,table1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,patient_bed_station1:station,table1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,table1:station,hospital_cart1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,table1:station,hospital_cart_left1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot4:player,hospital_cart1:station,hospital_cart_left1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,hospital_cart1:station,patient_legs1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot4:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot2:player,patient_legs1:station,patient_bed_station1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,patient_legs1:station,table1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,patient_legs1:station,patient_bed_station1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: pick-up(robot3:player,cpr_board1:item,patient_bed_station1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'stacked': True}}
curr_heuristic: 5
reward before normalising -5
reward after normalising -0.1282051282051282
reward:  -0.1282051282051282
prev_heuristic: 5
action: move(robot4:player,patient_legs1:station,hospital_cart1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,table1:station,hospital_cart_left1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: unstack(robot1:player,patient1:item,syringe1:item,hospital_cart_left1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,patient_bed_station1:station,hospital_cart_right1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: stack(robot3:player,cpr_board1:item,pump1:item,hospital_cart_right1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 0
reward before normalising -5
reward after normalising -0.11363636363636363
reward:  -0.11363636363636363
prev_heuristic: 0
action: stack(robot1:player,patient1:item,syringe1:item,hospital_cart_left1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: unstack(robot3:player,cpr_board1:item,pump1:item,hospital_cart_right1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 5
reward after normalising 0.1111111111111111
reward:  0.1111111111111111
prev_heuristic: 5
action: move(robot4:player,hospital_cart1:station,patient_legs1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,hospital_cart_right1:station,patient_bed_station1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,patient_legs1:station,hospital_cart_left1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,patient_bed_station1:station,hospital_cart_right1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,hospital_cart_left1:station,table1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,patient_bed_station1:station,hospital_cart_left1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,table1:station,hospital_cart_left1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,hospital_cart_right1:station,hospital_cart1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,hospital_cart_left1:station,table1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,hospital_cart1:station,table1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,table1:station,hospital_cart_left1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,patient_legs1:station,hospital_cart_left1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,hospital_cart_left1:station,hospital_cart_right1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,table1:station,hospital_cart_right1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot4:player,patient_legs1:station,hospital_cart1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,hospital_cart_left1:station,table1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,table1:station,patient_bed_station1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: unstack(robot2:player,pump1:item,aed1:item,hospital_cart_right1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 5
reward after normalising 0.08928571428571429
reward:  0.08928571428571429
prev_heuristic: 10
action: move(robot3:player,hospital_cart_right1:station,patient_bed_station1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot2:player,hospital_cart_right1:station,table1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,patient_bed_station1:station,hospital_cart_left1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,patient_bed_station1:station,table1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot2:player,table1:station,hospital_cart1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot2:player,hospital_cart1:station,patient_legs1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot2:player,patient_legs1:station,hospital_cart1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot4:player,hospital_cart1:station,patient_bed_station1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: place(robot2:player,pump1:item,hospital_cart1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 5
reward before normalising -5
reward after normalising -0.078125
reward:  -0.078125
prev_heuristic: 5
action: move(robot3:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,patient_legs1:station,hospital_cart1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,table1:station,hospital_cart_right1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,hospital_cart1:station,patient_bed_station1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,hospital_cart_right1:station,hospital_cart1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,hospital_cart1:station,hospital_cart_right1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,hospital_cart_right1:station,table1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,table1:station,hospital_cart_right1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,hospital_cart1:station,hospital_cart_right1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,hospital_cart_right1:station,table1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,patient_bed_station1:station,hospital_cart_right1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,hospital_cart_right1:station,patient_legs1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,hospital_cart_right1:station,patient_legs1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,patient_legs1:station,table1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot4:player,patient_bed_station1:station,hospital_cart_left1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,patient_legs1:station,hospital_cart_left1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: place(robot3:player,cpr_board1:item,table1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 0
reward before normalising -5
reward after normalising -0.06666666666666667
reward:  -0.06666666666666667
prev_heuristic: 0
action: unstack(robot4:player,patient1:item,syringe1:item,hospital_cart_left1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot1:player,table1:station,patient_bed_station1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot2:player,hospital_cart_left1:station,table1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot4:player,hospital_cart_left1:station,patient_bed_station1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: pick-up(robot2:player,cpr_board1:item,table1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 5
reward after normalising 0.0641025641025641
reward:  0.0641025641025641
prev_heuristic: 5
action: place(robot4:player,patient1:item,patient_bed_station1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,patient_bed_station1:station,patient_legs1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,table1:station,patient_bed_station1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,table1:station,hospital_cart_right1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,patient_bed_station1:station,table1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,patient_legs1:station,hospital_cart1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,hospital_cart_right1:station,hospital_cart1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,hospital_cart1:station,table1:station)
self.state in handleaction: {'patient1': {'picked-up': False, 'stacked': True}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: pick-up(robot4:player,patient1:item,patient_bed_station1:station)
self.state in handleaction: {'patient1': {'picked-up': False}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,table1:station,hospital_cart_left1:station)
self.state in handleaction: {'patient1': {'picked-up': False}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,hospital_cart1:station,hospital_cart_left1:station)
self.state in handleaction: {'patient1': {'picked-up': False}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,table1:station,hospital_cart_right1:station)
self.state in handleaction: {'patient1': {'picked-up': False}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,hospital_cart_left1:station,hospital_cart1:station)
self.state in handleaction: {'patient1': {'picked-up': False}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot4:player,patient_bed_station1:station,hospital_cart_left1:station)
self.state in handleaction: {'patient1': {'picked-up': False}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,hospital_cart1:station,table1:station)
self.state in handleaction: {'patient1': {'picked-up': False}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,hospital_cart_left1:station,table1:station)
self.state in handleaction: {'patient1': {'picked-up': False}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'stacked': True}, 'pump1': {'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: pick-up(robot1:player,aed1:item,hospital_cart_right1:station)
self.state in handleaction: {'patient1': {'picked-up': False}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'stacked': True}, 'pump1': {'stacked': True}, 'aed1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 5
reward after normalising 0.056818181818181816
reward:  0.056818181818181816
prev_heuristic: 10
action: move(robot2:player,table1:station,patient_legs1:station)
self.state in handleaction: {'patient1': {'picked-up': False}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'stacked': True}, 'pump1': {'stacked': True}, 'aed1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot4:player,hospital_cart_left1:station,patient_bed_station1:station)
self.state in handleaction: {'patient1': {'picked-up': False}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'stacked': True}, 'pump1': {'stacked': True}, 'aed1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: place(robot1:player,aed1:item,hospital_cart_right1:station)
self.state in handleaction: {'patient1': {'picked-up': False}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'stacked': True}, 'pump1': {'stacked': True}, 'aed1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising -5
reward after normalising -0.056179775280898875
reward:  -0.056179775280898875
prev_heuristic: 5
action: move(robot2:player,patient_legs1:station,hospital_cart_left1:station)
self.state in handleaction: {'patient1': {'picked-up': False}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'stacked': True}, 'pump1': {'stacked': True}, 'aed1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,table1:station,patient_bed_station1:station)
self.state in handleaction: {'patient1': {'picked-up': False}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'stacked': True}, 'pump1': {'stacked': True}, 'aed1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot4:player,patient_bed_station1:station,patient_legs1:station)
self.state in handleaction: {'patient1': {'picked-up': False}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'stacked': True}, 'pump1': {'stacked': True}, 'aed1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,hospital_cart_right1:station,patient_bed_station1:station)
self.state in handleaction: {'patient1': {'picked-up': False}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'stacked': True}, 'pump1': {'stacked': True}, 'aed1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,hospital_cart_left1:station,hospital_cart1:station)
self.state in handleaction: {'patient1': {'picked-up': False}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'stacked': True}, 'pump1': {'stacked': True}, 'aed1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,patient_bed_station1:station,table1:station)
self.state in handleaction: {'patient1': {'picked-up': False}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'stacked': True}, 'pump1': {'stacked': True}, 'aed1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,hospital_cart1:station,patient_legs1:station)
self.state in handleaction: {'patient1': {'picked-up': False}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'stacked': True}, 'pump1': {'stacked': True}, 'aed1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot4:player,patient_legs1:station,hospital_cart1:station)
self.state in handleaction: {'patient1': {'picked-up': False}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'stacked': True}, 'pump1': {'stacked': True}, 'aed1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,patient_bed_station1:station,hospital_cart1:station)
self.state in handleaction: {'patient1': {'picked-up': False}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'stacked': True}, 'pump1': {'stacked': True}, 'aed1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,table1:station,hospital_cart_right1:station)
self.state in handleaction: {'patient1': {'picked-up': False}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'stacked': True}, 'pump1': {'stacked': True}, 'aed1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,patient_legs1:station,hospital_cart1:station)
self.state in handleaction: {'patient1': {'picked-up': False}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'stacked': True}, 'pump1': {'stacked': True}, 'aed1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot4:player,hospital_cart1:station,patient_legs1:station)
self.state in handleaction: {'patient1': {'picked-up': False}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'stacked': True}, 'pump1': {'stacked': True}, 'aed1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,hospital_cart1:station,hospital_cart_right1:station)
self.state in handleaction: {'patient1': {'picked-up': False}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'stacked': True}, 'pump1': {'stacked': True}, 'aed1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: place(robot4:player,patient1:item,patient_legs1:station)
self.state in handleaction: {'patient1': {'picked-up': False}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'stacked': True}, 'pump1': {'stacked': True}, 'aed1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,hospital_cart1:station,table1:station)
self.state in handleaction: {'patient1': {'picked-up': False}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'stacked': True}, 'pump1': {'stacked': True}, 'aed1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,hospital_cart_right1:station,patient_bed_station1:station)
self.state in handleaction: {'patient1': {'picked-up': False}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'stacked': True}, 'pump1': {'stacked': True}, 'aed1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,table1:station,patient_bed_station1:station)
self.state in handleaction: {'patient1': {'picked-up': False}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'stacked': True}, 'pump1': {'stacked': True}, 'aed1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: pick-up(robot1:player,aed1:item,hospital_cart_right1:station)
self.state in handleaction: {'patient1': {'picked-up': False}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'stacked': True}, 'pump1': {'stacked': True}, 'aed1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 5
reward after normalising 0.05
reward:  0.05
prev_heuristic: 10
action: move(robot3:player,patient_bed_station1:station,hospital_cart_left1:station)
self.state in handleaction: {'patient1': {'picked-up': False}, 'cpr_board1': {'picked-up': False}, 'syringe1': {'stacked': True}, 'pump1': {'stacked': True}, 'aed1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
[INFO 14:17:56] my_main t_env: 900 / 1000
[INFO 14:17:56] my_main Estimated time left: 1 minutes, 16 seconds. Time passed: 10 minutes, 38 seconds
prev_heuristic: 0
action: move(robot1:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot1:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot1:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot1:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot1:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
[INFO 14:18:58] my_main Recent Stats | t_env:        900 | Episode:        9
ep_length_mean:          100.0000	epsilon:                   0.9848	return_mean:               0.5829	return_std:                0.0000
test_ep_length_mean:     100.0000	test_return_mean:          0.0012	test_return_std:           0.0000	
prev_heuristic: 0
action: move(robot1:player,hospital_cart_left1:station,table1:station)
self.state in handleaction: {}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: unstack(robot2:player,pump1:item,aed1:item,hospital_cart_right1:station)
self.state in handleaction: {}
curr_heuristic: 5
reward before normalising 5
reward after normalising 5.0
reward:  5.0
prev_heuristic: 5
action: move(robot1:player,table1:station,hospital_cart_right1:station)
self.state in handleaction: {}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,hospital_cart_right1:station,patient_legs1:station)
self.state in handleaction: {}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,patient_legs1:station,table1:station)
self.state in handleaction: {}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,hospital_cart_right1:station,table1:station)
self.state in handleaction: {}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,table1:station,patient_legs1:station)
self.state in handleaction: {}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,table1:station,hospital_cart_left1:station)
self.state in handleaction: {}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: pick-up(robot4:player,cpr_board1:item,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 5
reward after normalising 0.7142857142857143
reward:  0.7142857142857143
prev_heuristic: 10
action: place(robot2:player,pump1:item,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising -5
reward after normalising -0.7142857142857143
reward:  -0.7142857142857143
prev_heuristic: 5
action: place(robot4:player,cpr_board1:item,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}}
curr_heuristic: 0
reward before normalising -5
reward after normalising -0.625
reward:  -0.625
prev_heuristic: 0
action: move(robot1:player,table1:station,hospital_cart_right1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot2:player,patient_legs1:station,hospital_cart_right1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: pick-up(robot3:player,pump1:item,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 5
reward after normalising 0.625
reward:  0.625
prev_heuristic: 5
action: move(robot4:player,hospital_cart1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,hospital_cart_right1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,patient_legs1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,patient_bed_station1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot4:player,hospital_cart_left1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,hospital_cart1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,hospital_cart_right1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,patient_bed_station1:station,hospital_cart_right1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,patient_bed_station1:station,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: pick-up(robot1:player,aed1:item,hospital_cart_right1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'picked-up': False}, 'aed1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 5
reward after normalising 0.38461538461538464
reward:  0.38461538461538464
prev_heuristic: 10
action: move(robot3:player,table1:station,hospital_cart_right1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'picked-up': False}, 'aed1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot2:player,patient_legs1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'picked-up': False}, 'aed1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,hospital_cart_right1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'picked-up': False}, 'aed1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: place(robot3:player,pump1:item,hospital_cart_right1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'picked-up': False}, 'aed1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising -5
reward after normalising -0.3125
reward:  -0.3125
prev_heuristic: 5
action: move(robot4:player,hospital_cart1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'picked-up': False}, 'aed1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: pick-up(robot2:player,patient1:item,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'picked-up': False}, 'aed1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot4:player,patient_bed_station1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'picked-up': False}, 'aed1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,hospital_cart_right1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'picked-up': False}, 'aed1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: pick-up(robot3:player,cpr_board1:item,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'picked-up': False}, 'aed1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 5
reward after normalising 0.25
reward:  0.25
prev_heuristic: 10
action: move(robot4:player,hospital_cart_left1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'picked-up': False}, 'aed1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot2:player,patient_bed_station1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'picked-up': False}, 'aed1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,hospital_cart1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'picked-up': False}, 'aed1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,patient_legs1:station,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'picked-up': False}, 'aed1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,table1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'picked-up': False}, 'aed1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,patient_legs1:station,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'picked-up': False}, 'aed1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,patient_legs1:station,hospital_cart_right1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'picked-up': False}, 'aed1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,table1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'picked-up': False}, 'aed1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot4:player,hospital_cart1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'picked-up': False}, 'aed1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot4:player,patient_bed_station1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'picked-up': False}, 'aed1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: place(robot2:player,patient1:item,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'picked-up': False}, 'aed1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,hospital_cart_left1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'picked-up': False}, 'aed1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot4:player,patient_legs1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'picked-up': False}, 'aed1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,hospital_cart1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'picked-up': False}, 'aed1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot2:player,hospital_cart1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'picked-up': False}, 'aed1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,patient_bed_station1:station,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'picked-up': False}, 'aed1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,table1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'picked-up': False}, 'aed1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: stack(robot1:player,aed1:item,pump1:item,hospital_cart_right1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False}}
curr_heuristic: 15
reward before normalising 5
reward after normalising 0.16129032258064516
reward:  0.16129032258064516
prev_heuristic: 15
action: move(robot3:player,patient_bed_station1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'pump1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: stack(robot3:player,cpr_board1:item,syringe1:item,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising -5
reward after normalising -0.15625
reward:  -0.15625
prev_heuristic: 10
action: move(robot2:player,patient_bed_station1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,hospital_cart_right1:station,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,hospital_cart_left1:station,hospital_cart_right1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,table1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,hospital_cart_right1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: pick-up(robot4:player,patient1:item,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot2:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot2:player,patient_legs1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,hospital_cart1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,hospital_cart1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot2:player,patient_bed_station1:station,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,patient_legs1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,hospital_cart_left1:station,hospital_cart_right1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot2:player,table1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,hospital_cart_left1:station,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,hospital_cart_right1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,table1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,patient_legs1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot2:player,patient_bed_station1:station,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,patient_bed_station1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot2:player,table1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot2:player,hospital_cart_left1:station,hospital_cart_right1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,patient_legs1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,patient_bed_station1:station,hospital_cart_right1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot4:player,hospital_cart1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,patient_legs1:station,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot2:player,hospital_cart_right1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,hospital_cart_right1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,table1:station,hospital_cart_right1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: unstack(robot2:player,cpr_board1:item,syringe1:item,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False}, 'syringe1': {'stacked': True}}
curr_heuristic: 15
reward before normalising 5
reward after normalising 0.09615384615384616
reward:  0.09615384615384616
prev_heuristic: 15
action: move(robot3:player,patient_bed_station1:station,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False}, 'syringe1': {'stacked': True}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: move(robot1:player,hospital_cart_right1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False}, 'syringe1': {'stacked': True}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: move(robot3:player,table1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False}, 'syringe1': {'stacked': True}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: move(robot2:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False}, 'syringe1': {'stacked': True}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: move(robot3:player,hospital_cart1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False}, 'syringe1': {'stacked': True}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: move(robot2:player,patient_legs1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False}, 'syringe1': {'stacked': True}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: move(robot3:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False}, 'syringe1': {'stacked': True}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: move(robot2:player,hospital_cart_left1:station,hospital_cart_right1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False}, 'syringe1': {'stacked': True}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: move(robot3:player,patient_legs1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False}, 'syringe1': {'stacked': True}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: move(robot3:player,hospital_cart1:station,hospital_cart_right1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False}, 'syringe1': {'stacked': True}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: place(robot4:player,patient1:item,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False}, 'syringe1': {'stacked': True}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: move(robot2:player,hospital_cart_right1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False}, 'syringe1': {'stacked': True}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: move(robot4:player,patient_bed_station1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False}, 'syringe1': {'stacked': True}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: move(robot2:player,patient_legs1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False}, 'syringe1': {'stacked': True}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: move(robot3:player,hospital_cart_right1:station,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False}, 'syringe1': {'stacked': True}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: move(robot1:player,patient_legs1:station,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False}, 'syringe1': {'stacked': True}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: move(robot1:player,table1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False}, 'syringe1': {'stacked': True}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: stack(robot2:player,cpr_board1:item,patient1:item,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising -5
reward after normalising -0.07692307692307693
reward:  -0.07692307692307693
prev_heuristic: 10
action: move(robot3:player,table1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,hospital_cart1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,hospital_cart_left1:station,hospital_cart_right1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot4:player,hospital_cart1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,hospital_cart_right1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot2:player,patient_bed_station1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot2:player,hospital_cart_left1:station,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,patient_legs1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,patient_bed_station1:station,hospital_cart_right1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,hospital_cart1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,hospital_cart_right1:station,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot4:player,patient_legs1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,table1:station,hospital_cart_right1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,hospital_cart_right1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot2:player,table1:station,hospital_cart_right1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,patient_bed_station1:station,hospital_cart_right1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot4:player,hospital_cart_left1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: unstack(robot4:player,cpr_board1:item,patient1:item,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}}
curr_heuristic: 15
reward before normalising 5
reward after normalising 0.0625
reward:  0.0625
prev_heuristic: 15
action: move(robot2:player,hospital_cart_right1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}}
curr_heuristic: 15
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 15
action: stack(robot4:player,cpr_board1:item,patient1:item,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising -5
reward after normalising -0.06172839506172839
reward:  -0.06172839506172839
prev_heuristic: 10
action: move(robot4:player,patient_bed_station1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,hospital_cart_right1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot4:player,patient_legs1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,hospital_cart1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot2:player,hospital_cart_left1:station,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,patient_bed_station1:station,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,patient_legs1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,patient_bed_station1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,table1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,patient_legs1:station,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,patient_legs1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot2:player,table1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot2:player,patient_legs1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot4:player,hospital_cart1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,table1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,patient_bed_station1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot2:player,hospital_cart_left1:station,hospital_cart_right1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,hospital_cart1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot4:player,patient_bed_station1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,patient_legs1:station,hospital_cart_right1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,hospital_cart_right1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot2:player,hospital_cart_right1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: pick-up(robot4:player,syringe1:item,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'pump1': {'picked-up': False, 'stacked': True}, 'aed1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}}
curr_heuristic: 15
reward before normalising 5
reward after normalising 0.04950495049504951
reward:  0.04950495049504951
[INFO 14:19:16] my_main t_env: 1000 / 1000
[INFO 14:19:16] my_main Estimated time left: -. Time passed: 11 minutes, 58 seconds
prev_heuristic: 0
action: move(robot1:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot1:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot1:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot1:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot1:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
[INFO 14:20:18] my_main Recent Stats | t_env:       1000 | Episode:       10
ep_length_mean:          100.0000	epsilon:                   0.9829	return_mean:               0.6977	return_std:                0.0000
test_ep_length_mean:     100.0000	test_return_mean:          0.0012	test_return_std:           0.0000	
prev_heuristic: 0
action: move(robot4:player,hospital_cart1:station,hospital_cart_left1:station)
self.state in handleaction: {}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot1:player,hospital_cart_left1:station,hospital_cart1:station)
self.state in handleaction: {}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot3:player,table1:station,hospital_cart1:station)
self.state in handleaction: {}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot1:player,hospital_cart1:station,patient_bed_station1:station)
self.state in handleaction: {}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot4:player,hospital_cart_left1:station,patient_bed_station1:station)
self.state in handleaction: {}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot1:player,patient_bed_station1:station,table1:station)
self.state in handleaction: {}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: pick-up(robot3:player,cpr_board1:item,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 5
reward after normalising 0.625
reward:  0.625
prev_heuristic: 5
action: move(robot1:player,table1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,hospital_cart_right1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,hospital_cart1:station,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: pick-up(robot4:player,patient1:item,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,patient_legs1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,table1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,hospital_cart_left1:station,hospital_cart_right1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,patient_bed_station1:station,hospital_cart_right1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,hospital_cart_left1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: place(robot4:player,patient1:item,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,hospital_cart_right1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,hospital_cart_right1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,hospital_cart1:station,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,hospital_cart_left1:station,hospital_cart_right1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot4:player,patient_bed_station1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,hospital_cart_right1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot4:player,patient_legs1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,table1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False}, 'patient1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: stack(robot3:player,cpr_board1:item,patient1:item,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 0
reward before normalising -5
reward after normalising -0.23809523809523808
reward:  -0.23809523809523808
prev_heuristic: 0
action: move(robot3:player,patient_bed_station1:station,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot1:player,hospital_cart1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot4:player,patient_bed_station1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot1:player,patient_legs1:station,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot3:player,table1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot1:player,table1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: pick-up(robot3:player,syringe1:item,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 5
reward after normalising 0.19230769230769232
reward:  0.19230769230769232
prev_heuristic: 5
action: move(robot4:player,hospital_cart1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,patient_bed_station1:station,hospital_cart_right1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,hospital_cart_left1:station,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot4:player,hospital_cart_left1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,hospital_cart_right1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,patient_legs1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,hospital_cart_left1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot4:player,patient_bed_station1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,table1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,patient_bed_station1:station,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: stack(robot3:player,syringe1:item,cpr_board1:item,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 0
reward before normalising -5
reward after normalising -0.15151515151515152
reward:  -0.15151515151515152
prev_heuristic: 0
action: move(robot1:player,table1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot3:player,patient_bed_station1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot4:player,hospital_cart1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot2:player,patient_bed_station1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot1:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot3:player,patient_legs1:station,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot3:player,table1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot1:player,patient_legs1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot2:player,patient_legs1:station,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot3:player,hospital_cart1:station,hospital_cart_right1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot2:player,table1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot4:player,patient_bed_station1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot2:player,hospital_cart1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot2:player,hospital_cart_left1:station,hospital_cart_right1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot3:player,hospital_cart_right1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot2:player,hospital_cart_right1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot2:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot3:player,hospital_cart_left1:station,hospital_cart_right1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot2:player,patient_legs1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot3:player,hospital_cart_right1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot4:player,patient_legs1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot3:player,hospital_cart_left1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot4:player,hospital_cart_left1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot1:player,hospital_cart_left1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot2:player,hospital_cart1:station,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot2:player,table1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot3:player,hospital_cart1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot3:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot4:player,hospital_cart1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot1:player,patient_bed_station1:station,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot2:player,patient_legs1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot3:player,patient_legs1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot2:player,hospital_cart1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot1:player,table1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot4:player,patient_legs1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot2:player,patient_bed_station1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot3:player,patient_bed_station1:station,hospital_cart_right1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot3:player,hospital_cart_right1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot2:player,hospital_cart1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot1:player,hospital_cart1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot2:player,patient_bed_station1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot2:player,patient_legs1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot4:player,hospital_cart1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot2:player,hospital_cart1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: unstack(robot2:player,syringe1:item,cpr_board1:item,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 5
reward before normalising 5
reward after normalising 0.07462686567164178
reward:  0.07462686567164178
prev_heuristic: 5
action: move(robot4:player,patient_legs1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,patient_bed_station1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,patient_bed_station1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,hospital_cart_left1:station,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot4:player,patient_bed_station1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,hospital_cart_left1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,patient_legs1:station,hospital_cart_right1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,patient_bed_station1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,table1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,hospital_cart1:station,hospital_cart_right1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot4:player,patient_legs1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,hospital_cart_left1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot4:player,patient_bed_station1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot4:player,patient_legs1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,hospital_cart1:station,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,hospital_cart_right1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot3:player,hospital_cart_right1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot4:player,patient_bed_station1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: unstack(robot3:player,cpr_board1:item,patient1:item,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 10
reward before normalising 5
reward after normalising 0.0641025641025641
reward:  0.0641025641025641
prev_heuristic: 10
action: move(robot1:player,table1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,patient_bed_station1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot2:player,patient_bed_station1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: pick-up(robot1:player,patient1:item,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False}, 'syringe1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot2:player,hospital_cart1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False}, 'syringe1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,patient_legs1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False}, 'syringe1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot2:player,patient_bed_station1:station,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False}, 'syringe1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,hospital_cart_left1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False}, 'syringe1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,hospital_cart1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False}, 'syringe1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot3:player,patient_bed_station1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False}, 'syringe1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,patient_bed_station1:station,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False}, 'syringe1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,table1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False}, 'syringe1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot1:player,hospital_cart_left1:station,hospital_cart_right1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False}, 'syringe1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot2:player,table1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False}, 'syringe1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot4:player,hospital_cart1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False}, 'syringe1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: move(robot2:player,patient_bed_station1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False}, 'syringe1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 10
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 10
action: place(robot3:player,cpr_board1:item,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False}, 'syringe1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 5
reward before normalising -5
reward after normalising -0.056818181818181816
reward:  -0.056818181818181816
prev_heuristic: 5
action: move(robot3:player,patient_legs1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False}, 'syringe1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot1:player,hospital_cart_right1:station,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False}, 'syringe1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: place(robot2:player,syringe1:item,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False}, 'syringe1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 0
reward before normalising -5
reward after normalising -0.05555555555555555
reward:  -0.05555555555555555
prev_heuristic: 0
action: move(robot3:player,patient_bed_station1:station,hospital_cart_left1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False}, 'syringe1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot2:player,hospital_cart1:station,hospital_cart_right1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False}, 'syringe1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot2:player,hospital_cart_right1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False}, 'syringe1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot3:player,hospital_cart_left1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False}, 'syringe1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot1:player,table1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False}, 'syringe1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot4:player,hospital_cart_left1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False}, 'syringe1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: stack(robot1:player,patient1:item,syringe1:item,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot2:player,patient_bed_station1:station,hospital_cart_right1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot3:player,patient_bed_station1:station,hospital_cart_right1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot4:player,patient_bed_station1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: unstack(robot2:player,pump1:item,aed1:item,hospital_cart_right1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 5
reward before normalising 5
reward after normalising 0.05102040816326531
reward:  0.05102040816326531
prev_heuristic: 5
action: move(robot4:player,hospital_cart1:station,patient_legs1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,hospital_cart_right1:station,table1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot4:player,patient_legs1:station,patient_bed_station1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 5
action: move(robot2:player,table1:station,hospital_cart1:station)
self.state in handleaction: {'cpr_board1': {'picked-up': False, 'stacked': True}, 'patient1': {'picked-up': False, 'stacked': True}, 'syringe1': {'picked-up': False, 'stacked': True}}
curr_heuristic: 5
reward before normalising 0
reward after normalising 0.0
reward:  0.0
[INFO 14:20:35] my_main t_env: 1100 / 1000
[INFO 14:20:35] my_main Estimated time left: -. Time passed: 13 minutes, 18 seconds
prev_heuristic: 0
action: move(robot1:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot1:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot1:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot1:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
prev_heuristic: 0
action: move(robot1:player,hospital_cart_left1:station,patient_legs1:station)
self.state in handleaction: {}
curr_heuristic: 0
reward before normalising 0
reward after normalising 0.0
reward:  0.0
[INFO 14:21:36] my_main Saving models to results/models/qmix_seed448089844_None_2024-10-01 14:07:16.320697/1100
Saving best action with reward  0.0012048192771084336
[INFO 14:21:36] my_main Recent Stats | t_env:       1100 | Episode:       11
ep_length_mean:          100.0000	epsilon:                   0.9810	return_mean:               0.5774	return_std:                0.0000
test_ep_length_mean:     100.0000	test_return_mean:          0.0012	test_return_std:           0.0000	
[INFO 14:21:36] my_main Finished Training
Exiting Main
Stopping all threads
Thread MsgRouterThr is alive! Is daemon: True
Thread joined
Thread ChkStopThr is alive! Is daemon: True
Thread joined
Thread NetStatThr is alive! Is daemon: True
Thread joined
Thread IntMsgThr is alive! Is daemon: True
Thread joined
Thread Thread-3 is alive! Is daemon: False
Thread joined
Exiting script
[DEBUG 14:21:41] my_main Finished after 0:14:26.
[INFO 14:21:41] pymarl Completed after 0:14:26
